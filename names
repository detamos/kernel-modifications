/usr/src/linux-headers-4.15.0-22/scripts/gdb/linux/tasks.py:19:task_type = utils.CachedType("struct task_struct")
/usr/src/linux-headers-4.15.0-22/scripts/gdb/linux/tasks.py:50:    """Find Linux task by PID and return the task_struct variable.
/usr/src/linux-headers-4.15.0-22/scripts/gdb/linux/tasks.py:53:return that task_struct variable which PID matches."""
/usr/src/linux-headers-4.15.0-22/scripts/gdb/linux/tasks.py:95:            ia64_task_size = gdb.parse_and_eval("sizeof(struct task_struct)")
/usr/src/linux-headers-4.15.0-22/include/misc/cxl.h:160:		      struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/misc/cxllib.h:99: *    task: task_struct for the context of the translation
/usr/src/linux-headers-4.15.0-22/include/misc/cxllib.h:113:int cxllib_get_PE_attributes(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:71:extern void __delayacct_tsk_init(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:72:extern void __delayacct_tsk_exit(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:74:extern void __delayacct_blkio_end(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:75:extern int __delayacct_add_tsk(struct taskstats *, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:76:extern __u64 __delayacct_blkio_ticks(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:80:static inline int delayacct_is_task_waiting_on_io(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:100:static inline void delayacct_tsk_init(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:111:static inline void delayacct_tsk_free(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:125:static inline void delayacct_blkio_end(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:133:					struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:140:static inline __u64 delayacct_blkio_ticks(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:166:static inline void delayacct_tsk_init(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:168:static inline void delayacct_tsk_free(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:172:static inline void delayacct_blkio_end(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:175:					struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:177:static inline __u64 delayacct_blkio_ticks(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/delayacct.h:179:static inline int delayacct_is_task_waiting_on_io(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/mmzone.h:656:	struct task_struct *kswapd;	/* Protected by
/usr/src/linux-headers-4.15.0-22/include/linux/mmzone.h:667:	struct task_struct *kcompactd;
/usr/src/linux-headers-4.15.0-22/include/linux/profile.h:67:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/profile.h:71:void profile_task_exit(struct task_struct * task);
/usr/src/linux-headers-4.15.0-22/include/linux/profile.h:76:int profile_handoff_task(struct task_struct * task);
/usr/src/linux-headers-4.15.0-22/include/linux/shm.h:24:	struct task_struct	*shm_creator;
/usr/src/linux-headers-4.15.0-22/include/linux/shm.h:40:void exit_shm(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/shm.h:57:static inline void exit_shm(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/shm.h:60:static inline void shm_init_task(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:1306:static inline void blk_flush_plug(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:1314:static inline void blk_schedule_flush_plug(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:1322:static inline bool blk_needs_flush_plug(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:1999:static inline void blk_flush_plug(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:2003:static inline void blk_schedule_flush_plug(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/blkdev.h:2008:static inline bool blk_needs_flush_plug(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/kdb.h:178:int kdb_process_cpu(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/isdn.h:457:	struct task_struct *profd;                    /* For iprofd                 */
/usr/src/linux-headers-4.15.0-22/include/linux/smp.h:90:extern int __cpu_up(unsigned int cpunum, struct task_struct *tidle);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:19:static inline void *task_stack_page(const struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:26:static inline unsigned long *end_of_stack(const struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:35:static inline void setup_thread_stack(struct task_struct *p, struct task_struct *org)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:50:static inline unsigned long *end_of_stack(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:62:static inline void *try_get_task_stack(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:68:extern void put_task_stack(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:70:static inline void *try_get_task_stack(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:75:static inline void put_task_stack(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:91:static inline unsigned long stack_not_used(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task_stack.h:110:extern void set_task_stack_end_magic(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/deadline.h:22:static inline int dl_task(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/isolation.h:21:extern void housekeeping_affine(struct task_struct *t, enum hk_flags flags);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/isolation.h:37:static inline void housekeeping_affine(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/debug.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/debug.h:33:extern void show_stack(struct task_struct *task, unsigned long *sp);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/debug.h:35:extern void sched_show_task(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/debug.h:39:extern void proc_sched_show_task(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/debug.h:41:extern void proc_sched_set_task(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:16:static inline int rt_task(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:21:static inline bool task_is_realtime(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:36:static inline struct task_struct *rt_mutex_get_top_task(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:40:extern void rt_mutex_setprio(struct task_struct *p, struct task_struct *pi_task);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:41:extern void rt_mutex_adjust_pi(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:42:static inline bool tsk_is_pi_blocked(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:47:static inline struct task_struct *rt_mutex_get_top_task(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/rt.h:52:static inline bool tsk_is_pi_blocked(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:6:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:11:extern void sched_autogroup_create_attach(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:12:extern void sched_autogroup_detach(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:15:extern void sched_autogroup_exit_task(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:17:extern void proc_sched_autogroup_show_task(struct task_struct *p, struct seq_file *m);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:18:extern int proc_sched_autogroup_set_nice(struct task_struct *p, int nice);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:21:static inline void sched_autogroup_create_attach(struct task_struct *p) { }
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:22:static inline void sched_autogroup_detach(struct task_struct *p) { }
/usr/src/linux-headers-4.15.0-22/include/linux/sched/autogroup.h:25:static inline void sched_autogroup_exit_task(struct task_struct *p) { }
/usr/src/linux-headers-4.15.0-22/include/linux/sched/wake_q.h:51:		       struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/jobctl.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/jobctl.h:33:extern bool task_set_jobctl_pending(struct task_struct *task, unsigned long mask);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/jobctl.h:34:extern void task_clear_jobctl_trapping(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/jobctl.h:35:extern void task_clear_jobctl_pending(struct task_struct *task, unsigned long mask);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:20:extern pid_t task_numa_group_id(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:22:extern void task_numa_free(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:23:extern bool should_numa_migrate_memory(struct task_struct *p, struct page *page,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:30:static inline pid_t task_numa_group_id(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:37:static inline void task_numa_free(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/numa_balancing.h:40:static inline bool should_numa_migrate_memory(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:96:extern struct mm_struct *get_task_mm(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:102:extern struct mm_struct *mm_access(struct task_struct *task, unsigned int mode);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:104:extern void mm_release(struct task_struct *, struct mm_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:127:static inline bool in_vfork(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:221:static inline void membarrier_execve(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/mm.h:226:static inline void membarrier_execve(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/topology.h:222:static inline int task_node(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:12:static inline void add_rchar(struct task_struct *tsk, ssize_t amt)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:17:static inline void add_wchar(struct task_struct *tsk, ssize_t amt)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:22:static inline void inc_syscr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:27:static inline void inc_syscw(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:32:static inline void add_rchar(struct task_struct *tsk, ssize_t amt)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:36:static inline void add_wchar(struct task_struct *tsk, ssize_t amt)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:40:static inline void inc_syscr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/xacct.h:44:static inline void inc_syscw(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:21:extern void task_cputime(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:23:extern u64 task_gtime(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:25:static inline void task_cputime(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:32:static inline u64 task_gtime(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:39:static inline void task_cputime_scaled(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:47:static inline void task_cputime_scaled(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:55:extern void task_cputime_adjusted(struct task_struct *p, u64 *ut, u64 *st);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:56:extern void thread_group_cputime_adjusted(struct task_struct *p, u64 *ut, u64 *st);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:63:void thread_group_cputime(struct task_struct *tsk, struct task_cputime *times);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:64:void thread_group_cputimer(struct task_struct *tsk, struct task_cputime *times);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:80:struct thread_group_cputimer *get_running_cputimer(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:109:struct thread_group_cputimer *get_running_cputimer(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:125:static inline void account_group_user_time(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:146:static inline void account_group_system_time(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:167:static inline void account_group_exec_runtime(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/cputime.h:187:task_sched_runtime(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:12:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:26:extern struct task_struct init_task;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:32:extern asmlinkage void schedule_tail(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:33:extern void init_idle(struct task_struct *idle, int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:35:extern int sched_fork(unsigned long clone_flags, struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:36:extern void sched_dead(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:42:extern void release_task(struct task_struct * p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:46:			struct task_struct *, unsigned long);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:49:			struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:55:		struct task_struct *p, unsigned long tls)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:63:extern void exit_thread(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:65:static inline void exit_thread(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:71:extern void exit_files(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:76:struct task_struct *fork_idle(int);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:80:extern void free_task(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:91:extern void __put_task_struct(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:93:static inline void put_task_struct(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:99:struct task_struct *task_rcu_dereference(struct task_struct **ptask);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:104:# define arch_task_struct_size (sizeof(struct task_struct))
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:108:static inline struct vm_struct *task_stack_vm_area(const struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:113:static inline struct vm_struct *task_stack_vm_area(const struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:129:static inline void task_lock(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/task.h:134:static inline void task_unlock(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:88:	struct task_struct	*curr_target;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:101:	struct task_struct	*group_exit_task;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:261:extern void flush_signals(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:262:extern void ignore_signals(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:263:extern void flush_signal_handlers(struct task_struct *, int force_default);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:264:extern int dequeue_signal(struct task_struct *tsk, sigset_t *mask, siginfo_t *info);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:268:	struct task_struct *tsk = current;
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:288:extern int send_sig_info(int, struct siginfo *, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:289:extern int force_sigsegv(int, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:290:extern int force_sig_info(int, struct siginfo *, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:297:extern __must_check bool do_notify_parent(struct task_struct *, int);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:298:extern void __wake_up_parent(struct task_struct *p, struct task_struct *parent);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:299:extern void force_sig(int, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:300:extern int send_sig(int, struct task_struct *, int);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:301:extern int zap_other_threads(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:304:extern int send_sigqueue(struct sigqueue *,  struct task_struct *, int group);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:313:static inline int signal_pending(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:318:static inline int __fatal_signal_pending(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:323:static inline int fatal_signal_pending(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:328:static inline int signal_pending_state(long state, struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:344:extern void recalc_sigpending_and_wake(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:347:extern void signal_wake_up_state(struct task_struct *t, unsigned int state);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:349:static inline void signal_wake_up(struct task_struct *t, bool resume)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:353:static inline void ptrace_signal_wake_up(struct task_struct *t, bool resume)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:476:static inline void sas_ss_reset(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:501:	list_entry_rcu((p)->tasks.next, struct task_struct, tasks)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:528:typedef int (*proc_visitor)(struct task_struct *p, void *data);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:529:void walk_process_tree(struct task_struct *top, proc_visitor, void *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:531:static inline int get_nr_threads(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:536:static inline bool thread_group_leader(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:547:static inline bool has_group_leader_pid(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:553:bool same_thread_group(struct task_struct *p1, struct task_struct *p2)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:558:static inline struct task_struct *next_thread(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:561:			      struct task_struct, thread_group);
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:564:static inline int thread_group_empty(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:572:extern struct sighand_struct *__lock_task_sighand(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:575:static inline struct sighand_struct *lock_task_sighand(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:585:static inline void unlock_task_sighand(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:591:static inline unsigned long task_rlimit(const struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/sched/signal.h:597:static inline unsigned long task_rlimit_max(const struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/compat.h:324:extern void compat_exit_robust_list(struct task_struct *curr);
/usr/src/linux-headers-4.15.0-22/include/linux/compat.h:462:extern int compat_ptrace_request(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/include/linux/compat.h:466:extern long compat_arch_ptrace(struct task_struct *child, compat_long_t request,
/usr/src/linux-headers-4.15.0-22/include/linux/compat.h:727:	struct task_struct *t = current; \
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:6:#include <linux/sched.h>		/* For struct task_struct.  */
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:13:extern int ptrace_access_vm(struct task_struct *tsk, unsigned long addr,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:49:extern long arch_ptrace(struct task_struct *child, long request,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:51:extern int ptrace_readdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:52:extern int ptrace_writedata(struct task_struct *tsk, char __user *src, unsigned long dst, int len);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:53:extern void ptrace_disable(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:54:extern int ptrace_request(struct task_struct *child, long request,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:57:extern void __ptrace_link(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:58:			  struct task_struct *new_parent,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:60:extern void __ptrace_unlink(struct task_struct *child);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:61:extern void exit_ptrace(struct task_struct *tracer, struct list_head *dead);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:88:extern bool ptrace_may_access(struct task_struct *task, unsigned int mode);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:90:static inline int ptrace_reparented(struct task_struct *child)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:95:static inline void ptrace_unlink(struct task_struct *child)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:101:int generic_ptrace_peekdata(struct task_struct *tsk, unsigned long addr,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:103:int generic_ptrace_pokedata(struct task_struct *tsk, unsigned long addr,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:110: * Returns %NULL if no one is tracing @task, or the &struct task_struct
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:117:static inline struct task_struct *ptrace_parent(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:133:static inline bool ptrace_event_enabled(struct task_struct *task, int event)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:201:static inline void ptrace_init_task(struct task_struct *child, bool ptrace)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:230:static inline void ptrace_release_task(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:290:static inline void user_enable_single_step(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:304:static inline void user_disable_single_step(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:308:extern void user_enable_single_step(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:309:extern void user_disable_single_step(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:333:static inline void user_enable_block_step(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:338:extern void user_enable_block_step(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:342:extern void user_single_step_siginfo(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:345:static inline void user_single_step_siginfo(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/ptrace.h:408:extern int task_current_syscall(struct task_struct *target, long *callno,
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:6: * Define 'struct task_struct' and provide the main scheduler
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:31:/* task_struct member predeclarations (sorted alphabetically): */
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:520:struct task_struct {
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:524:	 * must be the first element of task_struct.
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:532:	 * This begins the randomizable portion of task_struct. Only
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:552:	struct task_struct		*last_wakee;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:675:	struct task_struct __rcu	*real_parent;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:678:	struct task_struct __rcu	*parent;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:685:	struct task_struct		*group_leader;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:818:	struct task_struct		*pi_top_task;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1074:	struct task_struct		*oom_reaper_list;
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1092:	 * New fields for task_struct should be added above here, so that
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1093:	 * they are included in the randomized portion of task_struct.
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1102:	 * structure.  It *MUST* be at the end of 'task_struct'.
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1108:static inline struct pid *task_pid(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1113:static inline struct pid *task_tgid(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1123:static inline struct pid *task_pgrp(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1128:static inline struct pid *task_session(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1144:pid_t __task_pid_nr_ns(struct task_struct *task, enum pid_type type, struct pid_namespace *ns);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1146:static inline pid_t task_pid_nr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1151:static inline pid_t task_pid_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1156:static inline pid_t task_pid_vnr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1162:static inline pid_t task_tgid_nr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1177:static inline int pid_alive(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1182:static inline pid_t task_pgrp_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1187:static inline pid_t task_pgrp_vnr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1193:static inline pid_t task_session_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1198:static inline pid_t task_session_vnr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1203:static inline pid_t task_tgid_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1208:static inline pid_t task_tgid_vnr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1213:static inline pid_t task_ppid_nr_ns(const struct task_struct *tsk, struct pid_namespace *ns)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1225:static inline pid_t task_ppid_nr(const struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1231:static inline pid_t task_pgrp_nr(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1239:static inline unsigned int task_state_index(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1261:static inline char task_state_to_char(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1275:static inline int is_global_init(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1360:	static inline bool task_##func(struct task_struct *p)		\
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1364:	static inline void task_set_##func(struct task_struct *p)	\
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1368:	static inline void task_clear_##func(struct task_struct *p)	\
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1397:extern int task_can_attach(struct task_struct *p, const struct cpumask *cs_cpus_allowed);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1399:extern void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1400:extern int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1402:static inline void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1405:static inline int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1417:extern int yield_to(struct task_struct *p, bool preempt);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1418:extern void set_user_nice(struct task_struct *p, long nice);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1419:extern int task_prio(const struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1427:static inline int task_nice(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1432:extern int can_nice(const struct task_struct *p, const int nice);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1433:extern int task_curr(const struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1435:extern int sched_setscheduler(struct task_struct *, int, const struct sched_param *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1436:extern int sched_setscheduler_nocheck(struct task_struct *, int, const struct sched_param *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1437:extern int sched_setattr(struct task_struct *, const struct sched_attr *);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1438:extern struct task_struct *idle_task(int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1446:static inline bool is_idle_task(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1451:extern struct task_struct *curr_task(int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1452:extern void ia64_set_curr_task(int cpu, struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1464:static inline struct thread_info *task_thread_info(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1483:extern struct task_struct *find_task_by_vpid(pid_t nr);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1484:extern struct task_struct *find_task_by_pid_ns(pid_t nr, struct pid_namespace *ns);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1486:extern int wake_up_state(struct task_struct *tsk, unsigned int state);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1487:extern int wake_up_process(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1488:extern void wake_up_new_task(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1491:extern void kick_process(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1493:static inline void kick_process(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1496:extern void __set_task_comm(struct task_struct *tsk, const char *from, bool exec);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1498:static inline void set_task_comm(struct task_struct *tsk, const char *from)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1503:extern char *__get_task_comm(char *to, size_t len, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1511:extern unsigned long wait_task_inactive(struct task_struct *, long match_state);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1514:static inline unsigned long wait_task_inactive(struct task_struct *p, long match_state)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1524:static inline void set_tsk_thread_flag(struct task_struct *tsk, int flag)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1529:static inline void clear_tsk_thread_flag(struct task_struct *tsk, int flag)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1534:static inline int test_and_set_tsk_thread_flag(struct task_struct *tsk, int flag)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1539:static inline int test_and_clear_tsk_thread_flag(struct task_struct *tsk, int flag)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1544:static inline int test_tsk_thread_flag(struct task_struct *tsk, int flag)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1549:static inline void set_tsk_need_resched(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1554:static inline void clear_tsk_need_resched(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1559:static inline int test_tsk_need_resched(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1629:static inline unsigned int task_cpu(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1638:extern void set_task_cpu(struct task_struct *p, unsigned int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1642:static inline unsigned int task_cpu(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/sched.h:1647:static inline void set_task_cpu(struct task_struct *p, unsigned int cpu)
/usr/src/linux-headers-4.15.0-22/include/linux/resource.h:8:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/resource.h:10:void getrusage(struct task_struct *p, int who, struct rusage *ru);
/usr/src/linux-headers-4.15.0-22/include/linux/resource.h:11:int do_prlimit(struct task_struct *tsk, unsigned int resource,
/usr/src/linux-headers-4.15.0-22/include/linux/preempt.h:299:			  struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/include/linux/debug_locks.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/debug_locks.h:49:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/debug_locks.h:53:extern void debug_show_held_locks(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/debug_locks.h:61:static inline void debug_show_held_locks(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:20:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:39:typedef int user_regset_active_fn(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:58:typedef int user_regset_get_fn(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:79:typedef int user_regset_set_fn(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:105:typedef int user_regset_writeback_fn(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:128:typedef unsigned int user_regset_get_size_fn(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:242:const struct user_regset_view *task_user_regset_view(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:368:static inline int copy_regset_to_user(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:394:static inline int copy_regset_from_user(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/regset.h:419:static inline unsigned int regset_size(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:16:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:93:		struct task_struct	*it_process;
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:108:void run_posix_cpu_timers(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:109:void posix_cpu_timers_exit(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:110:void posix_cpu_timers_exit_group(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:111:void set_process_cpu_timer(struct task_struct *task, unsigned int clock_idx,
/usr/src/linux-headers-4.15.0-22/include/linux/posix-timers.h:114:void update_rlimit_cpu(struct task_struct *task, unsigned long rlim_new);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:10:struct task_struct *kthread_create_on_node(int (*threadfn)(void *data),
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:30:struct task_struct *kthread_create_on_cpu(int (*threadfn)(void *data),
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:46:	struct task_struct *__k						   \
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:53:void free_kthread_struct(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:54:void kthread_bind(struct task_struct *k, unsigned int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:55:void kthread_bind_mask(struct task_struct *k, const struct cpumask *mask);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:56:int kthread_stop(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:60:void *kthread_data(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:61:void *kthread_probe_data(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:62:int kthread_park(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:63:void kthread_unpark(struct task_struct *k);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:67:extern struct task_struct *kthreadd_task;
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:68:extern int tsk_fork_get_node(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/kthread.h:91:	struct task_struct	*task;
/usr/src/linux-headers-4.15.0-22/include/linux/perf_regs.h:16:u64 perf_reg_abi(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_regs.h:31:static inline u64 perf_reg_abi(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:228:	struct task_struct	*move_lock_task;
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:337:bool task_in_mem_cgroup(struct task_struct *task, struct mem_cgroup *memcg);
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:338:struct mem_cgroup *mem_cgroup_from_task(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:353:			  int (*)(struct task_struct *, void *), void *);
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:462:				struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:476:static inline bool task_in_memcg_oom(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:741:static inline bool task_in_mem_cgroup(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:761:		int (*fn)(struct task_struct *, void *), void *arg)
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:813:mem_cgroup_print_oom_info(struct mem_cgroup *memcg, struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/memcontrol.h:842:static inline bool task_in_memcg_oom(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/mISDNif.h:509:	struct task_struct	*thread;
/usr/src/linux-headers-4.15.0-22/include/linux/interrupt.h:118:	struct task_struct	*thread;
/usr/src/linux-headers-4.15.0-22/include/linux/interrupt.h:510:DECLARE_PER_CPU(struct task_struct *, ksoftirqd);
/usr/src/linux-headers-4.15.0-22/include/linux/interrupt.h:512:static inline struct task_struct *this_cpu_ksoftirqd(void)
/usr/src/linux-headers-4.15.0-22/include/linux/jbd2.h:1003:	struct task_struct	*j_task;
/usr/src/linux-headers-4.15.0-22/include/linux/tracehook.h:161:static inline void set_notify_resume(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/swait.h:41:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/swait.h:49:	struct task_struct	*task;
/usr/src/linux-headers-4.15.0-22/include/linux/tty.h:400:extern void proc_clear_tty(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/tty.h:421:static inline void proc_clear_tty(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/uwb.h:102:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/nospec.h:10:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/nospec.h:62:int arch_prctl_spec_ctrl_get(struct task_struct *task, unsigned long which);
/usr/src/linux-headers-4.15.0-22/include/linux/nospec.h:63:int arch_prctl_spec_ctrl_set(struct task_struct *task, unsigned long which,
/usr/src/linux-headers-4.15.0-22/include/linux/nospec.h:66:void arch_seccomp_spec_mitigate(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/fdtable.h:106:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/fdtable.h:108:struct files_struct *get_files_struct(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/torture.h:70:void torture_shuffle_task_register(struct task_struct *tp);
/usr/src/linux-headers-4.15.0-22/include/linux/torture.h:90:			     char *f, struct task_struct **tp);
/usr/src/linux-headers-4.15.0-22/include/linux/torture.h:91:void _torture_stop_kthread(char *m, struct task_struct **tp);
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:803:unsigned long ftrace_graph_ret_addr(struct task_struct *task, int *idx,
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:828:extern void ftrace_graph_init_task(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:829:extern void ftrace_graph_exit_task(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:830:extern void ftrace_graph_init_idle_task(struct task_struct *t, int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:832:static inline int task_curr_ret_stack(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:851:static inline void ftrace_graph_init_task(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:852:static inline void ftrace_graph_exit_task(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:853:static inline void ftrace_graph_init_idle_task(struct task_struct *t, int cpu) { }
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:862:static inline int task_curr_ret_stack(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:868:ftrace_graph_ret_addr(struct task_struct *task, int *idx, unsigned long ret,
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:890:static inline void set_tsk_trace_trace(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:895:static inline void clear_tsk_trace_trace(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:900:static inline int test_tsk_trace_trace(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:905:static inline void set_tsk_trace_graph(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:910:static inline void clear_tsk_trace_graph(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/ftrace.h:915:static inline int test_tsk_trace_graph(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/mm_types_task.h:6: * Here are the definitions of the MM data types that are embedded in 'struct task_struct'.
/usr/src/linux-headers-4.15.0-22/include/linux/pktcdvd.h:56:	struct task_struct	*thread;
/usr/src/linux-headers-4.15.0-22/include/linux/iocontext.h:145:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/iocontext.h:149:void exit_io_context(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/iocontext.h:150:struct io_context *get_task_io_context(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/iocontext.h:155:static inline void exit_io_context(struct task_struct *task) { }
/usr/src/linux-headers-4.15.0-22/include/linux/proc_fs.h:16:extern void proc_flush_task(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/proc_fs.h:47:static inline void proc_flush_task(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/pkeys.h:32:static inline int arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:10:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:16:handle_futex_death(u32 __user *uaddr, struct task_struct *curr, int pi);
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:57:extern void exit_robust_list(struct task_struct *curr);
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:64:static inline void exit_robust_list(struct task_struct *curr)
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:70:extern void exit_pi_state_list(struct task_struct *curr);
/usr/src/linux-headers-4.15.0-22/include/linux/futex.h:72:static inline void exit_pi_state_list(struct task_struct *curr)
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:81:extern void account_user_time(struct task_struct *, u64);
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:82:extern void account_guest_time(struct task_struct *, u64);
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:83:extern void account_system_time(struct task_struct *, int, u64);
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:84:extern void account_system_index_time(struct task_struct *, u64,
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:90:static inline void account_process_tick(struct task_struct *tsk, int user)
/usr/src/linux-headers-4.15.0-22/include/linux/kernel_stat.h:95:extern void account_process_tick(struct task_struct *, int user);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:33: * task_struct has a problem.  When the user space process exits
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:34: * the now useless task_struct is still kept.  A task_struct plus a
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:36: * this is THREAD_SIZE + sizeof(struct task_struct).  By comparison
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:84:extern struct task_struct *pid_task(struct pid *pid, enum pid_type);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:85:extern struct task_struct *get_pid_task(struct pid *pid, enum pid_type);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:87:extern struct pid *get_task_pid(struct task_struct *task, enum pid_type type);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:92:extern void attach_pid(struct task_struct *task, enum pid_type);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:93:extern void detach_pid(struct task_struct *task, enum pid_type);
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:94:extern void change_pid(struct task_struct *task, enum pid_type,
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:96:extern void transfer_pid(struct task_struct *old, struct task_struct *new,
/usr/src/linux-headers-4.15.0-22/include/linux/pid.h:194:		struct task_struct *tg___ = task;			\
/usr/src/linux-headers-4.15.0-22/include/linux/stacktrace.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/stacktrace.h:20:extern void save_stack_trace_tsk(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/stacktrace.h:22:extern int save_stack_trace_tsk_reliable(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:139:struct mempolicy *get_task_policy(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:146:extern void mpol_rebind_task(struct task_struct *tsk, const nodemask_t *new);
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:153:extern bool mempolicy_nodemask_intersects(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:206:extern void mpol_put_task_policy(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:262:static inline void mpol_rebind_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/mempolicy.h:308:static inline void mpol_put_task_policy(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/kcov.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/kcov.h:25:void kcov_task_init(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/kcov.h:26:void kcov_task_exit(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/kcov.h:30:static inline void kcov_task_init(struct task_struct *t) {}
/usr/src/linux-headers-4.15.0-22/include/linux/kcov.h:31:static inline void kcov_task_exit(struct task_struct *t) {}
/usr/src/linux-headers-4.15.0-22/include/linux/mmc/host.h:259:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/mmc/host.h:409:	struct task_struct	*sdio_irq_thread;
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:25:static inline bool frozen(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:30:extern bool freezing_slow_path(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:35:static inline bool freezing(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:43:extern void __thaw_task(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:70:extern bool freeze_task(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:74:extern bool cgroup_freezing(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:76:static inline bool cgroup_freezing(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:149:static inline bool freezer_should_skip(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:261:static inline bool frozen(struct task_struct *p) { return false; }
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:262:static inline bool freezing(struct task_struct *p) { return false; }
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:263:static inline void __thaw_task(struct task_struct *t) {}
/usr/src/linux-headers-4.15.0-22/include/linux/freezer.h:276:static inline int freezer_should_skip(struct task_struct *p) { return 0; }
/usr/src/linux-headers-4.15.0-22/include/linux/uprobes.h:133:extern void uprobe_free_utask(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/uprobes.h:134:extern void uprobe_copy_process(struct task_struct *t, unsigned long flags);
/usr/src/linux-headers-4.15.0-22/include/linux/uprobes.h:144:extern bool arch_uprobe_xol_was_trapped(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/uprobes.h:197:static inline void uprobe_free_utask(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/uprobes.h:200:static inline void uprobe_copy_process(struct task_struct *t, unsigned long flags)
/usr/src/linux-headers-4.15.0-22/include/linux/libata.h:622:	struct task_struct	*eh_owner;
/usr/src/linux-headers-4.15.0-22/include/linux/fs_struct.h:20:extern void exit_fs(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cpufreq.h:147:	struct task_struct	*transition_task; /* Task which is doing the transition */
/usr/src/linux-headers-4.15.0-22/include/linux/sunrpc/svc.h:294:	struct task_struct	*rq_task;	/* service thread */
/usr/src/linux-headers-4.15.0-22/include/linux/lockdep.h:13:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/lockdep.h:482:static inline void lockdep_init_task(struct task_struct *task) {}
/usr/src/linux-headers-4.15.0-22/include/linux/lockdep.h:483:static inline void lockdep_free_task(struct task_struct *task) {}
/usr/src/linux-headers-4.15.0-22/include/linux/lockdep.h:542:extern void print_irqtrace_events(struct task_struct *curr);
/usr/src/linux-headers-4.15.0-22/include/linux/lockdep.h:544:static inline void print_irqtrace_events(struct task_struct *curr)
/usr/src/linux-headers-4.15.0-22/include/linux/vmacache.h:14:static inline void vmacache_flush(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/isdn_ppp.h:166:  struct task_struct *tk;
/usr/src/linux-headers-4.15.0-22/include/linux/poll.h:89:	struct task_struct *polling_task;
/usr/src/linux-headers-4.15.0-22/include/linux/ioprio.h:54:static inline int task_nice_ioprio(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ioprio.h:63:static inline int task_nice_ioclass(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/ioprio.h:78:extern int set_task_ioprio(struct task_struct *task, int ioprio);
/usr/src/linux-headers-4.15.0-22/include/linux/w1.h:235:	struct task_struct	*thread;
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:63:	struct task_struct		*cur_task;
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:104:int cgroup_attach_task_all(struct task_struct *from, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:112:int task_cgroup_path(struct task_struct *task, char *buf, size_t buflen);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:115:		     struct pid *pid, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:117:void cgroup_fork(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:118:extern int cgroup_can_fork(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:119:extern void cgroup_cancel_fork(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:120:extern void cgroup_post_fork(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:121:void cgroup_exit(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:122:void cgroup_free(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:139:struct task_struct *cgroup_taskset_first(struct cgroup_taskset *tset,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:141:struct task_struct *cgroup_taskset_next(struct cgroup_taskset *tset,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:146:struct task_struct *css_task_iter_next(struct css_task_iter *it);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:462:static inline struct css_set *task_css_set(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:474:static inline struct cgroup_subsys_state *task_css(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:490:task_get_css(struct task_struct *task, int subsys_id)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:513:static inline bool task_css_is_root(struct task_struct *task, int subsys_id)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:519:static inline struct cgroup *task_cgroup(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:525:static inline struct cgroup *task_dfl_cgroup(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:565:static inline bool task_under_cgroup_hierarchy(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:662:static inline int cgroup_attach_task_all(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:663:					 struct task_struct *t) { return 0; }
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:667:static inline void cgroup_fork(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:668:static inline int cgroup_can_fork(struct task_struct *p) { return 0; }
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:669:static inline void cgroup_cancel_fork(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:670:static inline void cgroup_post_fork(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:671:static inline void cgroup_exit(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:672:static inline void cgroup_free(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:683:static inline bool task_under_cgroup_hierarchy(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:699:void cpuacct_charge(struct task_struct *tsk, u64 cputime);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:700:void cpuacct_account_field(struct task_struct *tsk, int index, u64 val);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:702:static inline void cpuacct_charge(struct task_struct *tsk, u64 cputime) {}
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:703:static inline void cpuacct_account_field(struct task_struct *tsk, int index,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:711:static inline void cgroup_account_cputime(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:725:static inline void cgroup_account_cputime_field(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:742:static inline void cgroup_account_cputime(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup.h:744:static inline void cgroup_account_cputime_field(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/pid_namespace.h:29:	struct task_struct *child_reaper;
/usr/src/linux-headers-4.15.0-22/include/linux/pid_namespace.h:99:extern struct pid_namespace *task_active_pid_ns(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1007:static inline bool cpupid_match_pid(struct task_struct *task, int cpupid)
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1344:extern int fixup_user_fault(struct task_struct *tsk, struct mm_struct *mm,
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1355:static inline int fixup_user_fault(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1387:extern int access_process_vm(struct task_struct *tsk, unsigned long addr, void *buf, int len,
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1391:extern int __access_remote_vm(struct task_struct *tsk, struct mm_struct *mm,
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1394:long get_user_pages_remote(struct task_struct *tsk, struct mm_struct *mm,
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:1491:int get_cmdline(struct task_struct *task, char *buffer, int buflen);
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:2205:extern struct file *get_task_exe_file(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:2307:void task_dirty_inc(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/mm.h:2537:extern bool process_shares_mm(struct task_struct *p, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/include/linux/kasan.h:10:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/kasan.h:42:void kasan_unpoison_task_stack(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/kasan.h:87:static inline void kasan_unpoison_task_stack(struct task_struct *task) {}
/usr/src/linux-headers-4.15.0-22/include/linux/wait.h:40:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/wait.h:79:static inline void init_waitqueue_entry(struct wait_queue_entry *wq_entry, struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/nsproxy.h:68:int copy_namespaces(unsigned long flags, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/nsproxy.h:69:void exit_task_namespaces(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/nsproxy.h:70:void switch_task_namespaces(struct task_struct *tsk, struct nsproxy *new);
/usr/src/linux-headers-4.15.0-22/include/linux/string_helpers.h:75:char *kstrdup_quotable_cmdline(struct task_struct *task, gfp_t gfp);
/usr/src/linux-headers-4.15.0-22/include/linux/mutex.h:69:static inline struct task_struct *__mutex_owner(struct mutex *lock)
/usr/src/linux-headers-4.15.0-22/include/linux/mutex.h:71:	return (struct task_struct *)(atomic_long_read(&lock->owner) & ~0x07);
/usr/src/linux-headers-4.15.0-22/include/linux/mutex.h:80:	struct task_struct	*task;
/usr/src/linux-headers-4.15.0-22/include/linux/key.h:402:extern void key_fsuid_changed(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/key.h:403:extern void key_fsgid_changed(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/rcupdate.h:67:void rcu_read_unlock_special(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/rwsem.h:40:	struct task_struct *owner;
/usr/src/linux-headers-4.15.0-22/include/linux/mm_types.h:347:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/mm_types.h:462:	struct task_struct __rcu *owner;
/usr/src/linux-headers-4.15.0-22/include/linux/elfcore.h:33:static inline int elf_core_copy_task_regs(struct task_struct *t, elf_gregset_t* elfregs)
/usr/src/linux-headers-4.15.0-22/include/linux/elfcore.h:45:static inline int elf_core_copy_task_fpregs(struct task_struct *t, struct pt_regs *regs, elf_fpregset_t *fpu)
/usr/src/linux-headers-4.15.0-22/include/linux/elfcore.h:55:static inline int elf_core_copy_task_xfpregs(struct task_struct *t, elf_fpxregset_t *xfpu)
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:83:extern void put_seccomp_filter(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:84:extern void get_seccomp_filter(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:86:static inline void put_seccomp_filter(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:90:static inline void get_seccomp_filter(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:97:extern long seccomp_get_filter(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/seccomp.h:100:static inline long seccomp_get_filter(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:179:void klp_copy_process(struct task_struct *child);
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:180:void klp_update_patch_state(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:182:static inline bool klp_patch_pending(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:205:static inline bool klp_patch_pending(struct task_struct *task) { return false; }
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:206:static inline void klp_update_patch_state(struct task_struct *task) {}
/usr/src/linux-headers-4.15.0-22/include/linux/livepatch.h:207:static inline void klp_copy_process(struct task_struct *child) {}
/usr/src/linux-headers-4.15.0-22/include/linux/spi/spi.h:527:	struct task_struct		*kworker_task;
/usr/src/linux-headers-4.15.0-22/include/linux/oprofile.h:113:	struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:80:extern int cap_ptrace_access_check(struct task_struct *child, unsigned int mode);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:81:extern int cap_ptrace_traceme(struct task_struct *parent);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:82:extern int cap_capget(struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:101:extern int cap_task_setscheduler(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:102:extern int cap_task_setioprio(struct task_struct *p, int ioprio);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:103:extern int cap_task_setnice(struct task_struct *p, int nice);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:200:int security_binder_set_context_mgr(struct task_struct *mgr);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:201:int security_binder_transaction(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:202:				struct task_struct *to);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:203:int security_binder_transfer_binder(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:204:				    struct task_struct *to);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:205:int security_binder_transfer_file(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:206:				  struct task_struct *to, struct file *file);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:207:int security_ptrace_access_check(struct task_struct *child, unsigned int mode);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:208:int security_ptrace_traceme(struct task_struct *parent);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:209:int security_capget(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:317:int security_file_send_sigiotask(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:321:int security_task_alloc(struct task_struct *task, unsigned long clone_flags);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:322:void security_task_free(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:335:int security_task_setpgid(struct task_struct *p, pid_t pgid);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:336:int security_task_getpgid(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:337:int security_task_getsid(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:338:void security_task_getsecid(struct task_struct *p, u32 *secid);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:339:int security_task_setnice(struct task_struct *p, int nice);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:340:int security_task_setioprio(struct task_struct *p, int ioprio);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:341:int security_task_getioprio(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:344:int security_task_setrlimit(struct task_struct *p, unsigned int resource,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:346:int security_task_setscheduler(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:347:int security_task_getscheduler(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:348:int security_task_movememory(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:349:int security_task_kill(struct task_struct *p, struct siginfo *info,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:353:void security_task_to_inode(struct task_struct *p, struct inode *inode);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:365:			      struct task_struct *target, long type, int mode);
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:378:int security_getprocattr(struct task_struct *p, const char *lsm, char *name,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:429:static inline int security_binder_set_context_mgr(struct task_struct *mgr)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:434:static inline int security_binder_transaction(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:435:					      struct task_struct *to)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:440:static inline int security_binder_transfer_binder(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:441:						  struct task_struct *to)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:446:static inline int security_binder_transfer_file(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:447:						struct task_struct *to,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:453:static inline int security_ptrace_access_check(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:459:static inline int security_ptrace_traceme(struct task_struct *parent)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:464:static inline int security_capget(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:866:static inline int security_file_send_sigiotask(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:884:static inline int security_task_alloc(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:890:static inline void security_task_free(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:949:static inline int security_task_setpgid(struct task_struct *p, pid_t pgid)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:954:static inline int security_task_getpgid(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:959:static inline int security_task_getsid(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:964:static inline void security_task_getsecid(struct task_struct *p, u32 *secid)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:969:static inline int security_task_setnice(struct task_struct *p, int nice)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:974:static inline int security_task_setioprio(struct task_struct *p, int ioprio)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:979:static inline int security_task_getioprio(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:991:static inline int security_task_setrlimit(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:998:static inline int security_task_setscheduler(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1003:static inline int security_task_getscheduler(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1008:static inline int security_task_movememory(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1013:static inline int security_task_kill(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1028:static inline void security_task_to_inode(struct task_struct *p, struct inode *inode)
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1077:					    struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/include/linux/security.h:1137:static inline int security_getprocattr(struct task_struct *p, const char *lsm,
/usr/src/linux-headers-4.15.0-22/include/linux/proc_ns.h:13:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/proc_ns.h:20:	struct ns_common *(*get)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/proc_ns.h:79:extern void *ns_get_path(struct path *path, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/proc_ns.h:82:extern int ns_get_name(char *buf, size_t size, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/smpboot.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/smpboot.h:34:	struct task_struct __percpu	**store;
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:11:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:50:extern void vtime_task_switch(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:52:extern void vtime_common_task_switch(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:53:static inline void vtime_task_switch(struct task_struct *prev)
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:60:extern void vtime_account_system(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:61:extern void vtime_account_idle(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:65:static inline void vtime_task_switch(struct task_struct *prev) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:66:static inline void vtime_account_system(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:70:extern void arch_vtime_task_switch(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:71:extern void vtime_user_enter(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:72:extern void vtime_user_exit(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:73:extern void vtime_guest_enter(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:74:extern void vtime_guest_exit(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:75:extern void vtime_init_idle(struct task_struct *tsk, int cpu);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:77:static inline void vtime_user_enter(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:78:static inline void vtime_user_exit(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:79:static inline void vtime_guest_enter(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:80:static inline void vtime_guest_exit(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:81:static inline void vtime_init_idle(struct task_struct *tsk, int cpu) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:85:extern void vtime_account_irq_enter(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:86:static inline void vtime_account_irq_exit(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:91:extern void vtime_flush(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:93:static inline void vtime_account_irq_enter(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:94:static inline void vtime_account_irq_exit(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:95:static inline void vtime_flush(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:100:extern void irqtime_account_irq(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:102:static inline void irqtime_account_irq(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:105:static inline void account_irq_enter_time(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/vtime.h:111:static inline void account_irq_exit_time(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/amd-iommu.h:41:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/amd-iommu.h:92:				struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:23:void proc_fork_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:24:void proc_exec_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:25:void proc_id_connector(struct task_struct *task, int which_id);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:26:void proc_sid_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:27:void proc_ptrace_connector(struct task_struct *task, int which_id);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:28:void proc_comm_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:29:void proc_coredump_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:30:void proc_exit_connector(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:32:static inline void proc_fork_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:35:static inline void proc_exec_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:38:static inline void proc_id_connector(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:42:static inline void proc_sid_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:45:static inline void proc_comm_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:48:static inline void proc_ptrace_connector(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:52:static inline void proc_coredump_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/cn_proc.h:55:static inline void proc_exit_connector(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/signalfd.h:19:static inline void signalfd_notify(struct task_struct *tsk, int sig)
/usr/src/linux-headers-4.15.0-22/include/linux/signalfd.h:29:static inline void signalfd_notify(struct task_struct *tsk, int sig) { }
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_audit.h:84:		struct task_struct *tsk;
/usr/src/linux-headers-4.15.0-22/include/linux/task_io_accounting_ops.h:20:static inline unsigned long task_io_get_inblock(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/task_io_accounting_ops.h:34:static inline unsigned long task_io_get_oublock(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/task_io_accounting_ops.h:63:static inline unsigned long task_io_get_inblock(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/task_io_accounting_ops.h:72:static inline unsigned long task_io_get_oublock(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/hw_breakpoint.h:51:			    struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/hw_breakpoint.h:81:extern void flush_ptrace_hw_breakpoint(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/hw_breakpoint.h:96:			    struct task_struct *tsk)	{ return NULL; }
/usr/src/linux-headers-4.15.0-22/include/linux/hw_breakpoint.h:120:static inline void flush_ptrace_hw_breakpoint(struct task_struct *tsk)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:42:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:203:extern bool has_capability(struct task_struct *t, int cap);
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:204:extern bool has_ns_capability(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:206:extern bool has_capability_noaudit(struct task_struct *t, int cap);
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:207:extern bool has_ns_capability_noaudit(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:213:static inline bool has_capability(struct task_struct *t, int cap)
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:217:static inline bool has_ns_capability(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:222:static inline bool has_capability_noaudit(struct task_struct *t, int cap)
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:226:static inline bool has_ns_capability_noaudit(struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/include/linux/capability.h:247:extern bool ptracer_capable(struct task_struct *tsk, struct user_namespace *ns);
/usr/src/linux-headers-4.15.0-22/include/linux/tracepoint.h:390: *	TP_PROTO(struct rq *rq, struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/tracepoint.h:391: *		 struct task_struct *next),
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:16:			  struct taskstats *stats, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:20:				 struct taskstats *stats, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:25:extern void xacct_add_tsk(struct taskstats *stats, struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:26:extern void acct_update_integrals(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:27:extern void acct_account_cputime(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:28:extern void acct_clear_integrals(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:30:static inline void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:32:static inline void acct_update_integrals(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:34:static inline void acct_account_cputime(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/tsacct_kern.h:36:static inline void acct_clear_integrals(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:601: *	@p contains the task_struct for process being modified.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:607: *	@p contains the task_struct for the process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:612: *	@p contains the task_struct for the process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:616: *	@p contains the task_struct for the process and place is into @secid.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:621: *	@p contains the task_struct of process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:626: *	@p contains the task_struct of process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:631: *	@p contains the task_struct of process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:645: *	@p points to the task_struct for the target task's group leader.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:652: *	@p contains the task_struct for process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:659: *	@p contains the task_struct for process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:663: *	@p contains the task_struct for process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:672: *	@p contains the task_struct for process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:690: *	@p contains the task_struct for the task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1173: *	@mgr contains the task_struct for the task being registered.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1178: *	@from contains the task_struct for the sending task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1179: *	@to contains the task_struct for the receiving task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1182: *	@from contains the task_struct for the sending task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1183: *	@to contains the task_struct for the receiving task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1186: *	@from contains the task_struct for the sending task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1188: *	@to contains the task_struct for the receiving task.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1198: *	@child contains the task_struct structure for the target process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1205: *	@parent contains the task_struct structure for debugger process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1212: *	@target contains the task_struct structure for target process.
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1390:	int (*binder_set_context_mgr)(struct task_struct *mgr);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1391:	int (*binder_transaction)(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1392:					struct task_struct *to);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1393:	int (*binder_transfer_binder)(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1394:					struct task_struct *to);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1395:	int (*binder_transfer_file)(struct task_struct *from,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1396:					struct task_struct *to,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1399:	int (*ptrace_access_check)(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1401:	int (*ptrace_traceme)(struct task_struct *parent);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1402:	int (*capget)(struct task_struct *target, kernel_cap_t *effective,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1532:	int (*file_send_sigiotask)(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1537:	int (*task_alloc)(struct task_struct *task, unsigned long clone_flags);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1538:	void (*task_free)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1552:	int (*task_setpgid)(struct task_struct *p, pid_t pgid);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1553:	int (*task_getpgid)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1554:	int (*task_getsid)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1555:	void (*task_getsecid)(struct task_struct *p, u32 *secid);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1556:	int (*task_setnice)(struct task_struct *p, int nice);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1557:	int (*task_setioprio)(struct task_struct *p, int ioprio);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1558:	int (*task_getioprio)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1561:	int (*task_setrlimit)(struct task_struct *p, unsigned int resource,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1563:	int (*task_setscheduler)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1564:	int (*task_getscheduler)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1565:	int (*task_movememory)(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1566:	int (*task_kill)(struct task_struct *p, struct siginfo *info,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1570:	void (*task_to_inode)(struct task_struct *p, struct inode *inode);
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1585:				struct task_struct *target, long type,
/usr/src/linux-headers-4.15.0-22/include/linux/lsm_hooks.h:1606:	int (*getprocattr)(struct task_struct *p, char *name, char **value);
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:200:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:366:void kretprobe_hash_lock(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:368:void kretprobe_hash_unlock(struct task_struct *tsk, unsigned long *flags);
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:369:struct hlist_head * kretprobe_inst_table_head(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:402:void kprobe_flush_task(struct task_struct *tk);
/usr/src/linux-headers-4.15.0-22/include/linux/kprobes.h:459:static inline void kprobe_flush_task(struct task_struct *tk)
/usr/src/linux-headers-4.15.0-22/include/linux/sem.h:11:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/sem.h:54:extern int copy_semundo(unsigned long clone_flags, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sem.h:55:extern void exit_sem(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/sem.h:63:static inline int copy_semundo(unsigned long clone_flags, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/sem.h:68:static inline void exit_sem(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:158:void tracing_record_taskinfo(struct task_struct *task, int flags);
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:159:void tracing_record_taskinfo_sched_switch(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:160:					  struct task_struct *next, int flags);
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:162:void tracing_record_cmdline(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:163:void tracing_record_tgid(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:545:			       struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/trace_events.h:550:		       struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/kexec.h:243:int kexec_should_crash(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/kexec.h:341:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/kexec.h:344:static inline int kexec_should_crash(struct task_struct *p) { return 0; }
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:152:extern void exit_creds(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:153:extern int copy_creds(struct task_struct *, unsigned long);
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:154:extern const struct cred *get_task_cred(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:163:extern struct cred *prepare_kernel_cred(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:175:extern void __validate_process_creds(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:197:extern void validate_creds_for_do_exit(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:202:static inline void validate_creds_for_do_exit(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/cred.h:258: * on task_struct are attached by const pointers to prevent accidental
/usr/src/linux-headers-4.15.0-22/include/linux/taskstats_kern.h:25:extern void taskstats_exit(struct task_struct *, int group_dead);
/usr/src/linux-headers-4.15.0-22/include/linux/taskstats_kern.h:28:static inline void taskstats_exit(struct task_struct *tsk, int group_dead)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:580:	int (*can_fork)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:581:	void (*cancel_fork)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:582:	void (*fork)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:583:	void (*exit)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:584:	void (*free)(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:674:static inline void cgroup_threadgroup_change_begin(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:685:static inline void cgroup_threadgroup_change_end(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:694:static inline void cgroup_threadgroup_change_begin(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/cgroup-defs.h:699:static inline void cgroup_threadgroup_change_end(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/include/linux/coresight.h:281:	struct task_struct *task = NULL;
/usr/src/linux-headers-4.15.0-22/include/linux/workqueue.h:473:extern void print_worker_info(const char *log_lvl, struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:169:extern void tick_nohz_dep_set_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:171:extern void tick_nohz_dep_clear_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:206:static inline void tick_dep_set_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:212:static inline void tick_dep_clear_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:243:static inline void tick_dep_set_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/tick.h:245:static inline void tick_dep_clear_task(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/linux/hrtimer.h:111:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/hrtimer.h:462:				 struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:58:extern void cpuset_cpus_allowed(struct task_struct *p, struct cpumask *mask);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:59:extern void cpuset_cpus_allowed_fallback(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:60:extern nodemask_t cpuset_mems_allowed(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:86:extern int cpuset_mems_allowed_intersects(const struct task_struct *tsk1,
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:87:					  const struct task_struct *tsk2);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:98:					struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:100:			    struct pid *pid, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:179:static inline void cpuset_cpus_allowed(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:185:static inline void cpuset_cpus_allowed_fallback(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:189:static inline nodemask_t cpuset_mems_allowed(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:217:static inline int cpuset_mems_allowed_intersects(const struct task_struct *tsk1,
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:218:						 const struct task_struct *tsk2)
/usr/src/linux-headers-4.15.0-22/include/linux/cpuset.h:226:						struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/kgdb.h:38:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/kgdb.h:57:extern struct task_struct	*kgdb_usethread;
/usr/src/linux-headers-4.15.0-22/include/linux/kgdb.h:58:extern struct task_struct	*kgdb_contthread;
/usr/src/linux-headers-4.15.0-22/include/linux/kgdb.h:135: *	@p: The &struct task_struct of the desired process.
/usr/src/linux-headers-4.15.0-22/include/linux/kgdb.h:145:sleeping_thread_to_gdb_regs(unsigned long *gdb_regs, struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:16:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:43:	struct task_struct *chosen;
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:59:static inline bool oom_task_origin(const struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:64:static inline bool tsk_is_oom_victim(struct task_struct * tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:98:extern unsigned long oom_badness(struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/include/linux/oom.h:112:extern struct task_struct *find_lock_task_mm(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:155:				struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:205:				       struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:221:extern int  audit_alloc(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:222:extern void __audit_free(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:238:extern void __audit_ptrace(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:245:static inline void audit_free(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:313:static inline void audit_ptrace(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:325:static inline kuid_t audit_get_loginuid(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:330:static inline unsigned int audit_get_sessionid(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:457:static inline int audit_alloc(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:461:static inline void audit_free(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:512:static inline kuid_t audit_get_loginuid(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:516:static inline unsigned int audit_get_sessionid(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:573:static inline void audit_ptrace(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/include/linux/audit.h:579:static inline bool audit_loginuid_set(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:19:static inline void propagate_user_return_notify(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:20:						struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:30:static inline void clear_user_return_notifier(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:39:static inline void propagate_user_return_notify(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:40:						struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/include/linux/user-return-notifier.h:46:static inline void clear_user_return_notifier(struct task_struct *p) {}
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:14:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:31:void __account_scheduler_latency(struct task_struct *task, int usecs, int inter);
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:33:account_scheduler_latency(struct task_struct *task, int usecs, int inter)
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:39:void clear_all_latency_tracing(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:47:account_scheduler_latency(struct task_struct *task, int usecs, int inter)
/usr/src/linux-headers-4.15.0-22/include/linux/latencytop.h:51:static inline void clear_all_latency_tracing(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:105:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:170:	struct task_struct		*target;
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:634:	struct task_struct		*owner;
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:723:	struct task_struct		*task;
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:818:perf_cgroup_from_task(struct task_struct *task, struct perf_event_context *ctx)
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:844:extern void __perf_event_task_sched_in(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:845:				       struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:846:extern void __perf_event_task_sched_out(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:847:					struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:848:extern int perf_event_init_task(struct task_struct *child);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:849:extern void perf_event_exit_task(struct task_struct *child);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:850:extern void perf_event_free_task(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:851:extern void perf_event_delayed_put(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:867:				struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1058:static inline void perf_event_task_migrate(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1064:static inline void perf_event_task_sched_in(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1065:					    struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1079:static inline void perf_event_task_sched_out(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1080:					     struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1094:extern void perf_event_comm(struct task_struct *tsk, bool exec);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1095:extern void perf_event_namespaces(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1096:extern void perf_event_fork(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1178:			  struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1267:perf_event_task_migrate(struct task_struct *task)			{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1269:perf_event_task_sched_in(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1270:			 struct task_struct *task)			{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1272:perf_event_task_sched_out(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1273:			  struct task_struct *next)			{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1274:static inline int perf_event_init_task(struct task_struct *child)	{ return 0; }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1275:static inline void perf_event_exit_task(struct task_struct *child)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1276:static inline void perf_event_free_task(struct task_struct *task)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1277:static inline void perf_event_delayed_put(struct task_struct *task)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1310:static inline void perf_event_comm(struct task_struct *tsk, bool exec)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1311:static inline void perf_event_namespaces(struct task_struct *tsk)	{ }
/usr/src/linux-headers-4.15.0-22/include/linux/perf_event.h:1312:static inline void perf_event_fork(struct task_struct *tsk)		{ }
/usr/src/linux-headers-4.15.0-22/include/linux/ww_mutex.h:29:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/linux/fs.h:546:uncached_acl_sentinel(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/task_work.h:16:int task_work_add(struct task_struct *task, struct callback_head *twork, bool);
/usr/src/linux-headers-4.15.0-22/include/linux/task_work.h:17:struct callback_head *task_work_cancel(struct task_struct *, task_work_func_t);
/usr/src/linux-headers-4.15.0-22/include/linux/task_work.h:20:static inline void exit_task_work(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/include/linux/rtmutex.h:33:	struct task_struct	*owner;
/usr/src/linux-headers-4.15.0-22/include/linux/rtmutex.h:51: extern void rt_mutex_debug_check_no_locks_held(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/include/linux/rtmutex.h:71: extern void rt_mutex_debug_task_free(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:258:				struct task_struct *p, bool group);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:259:extern int group_send_sig_info(int sig, struct siginfo *info, struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:260:extern int __group_send_sig_info(int, struct siginfo *, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:268:extern void exit_signals(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:288:int unhandled_signal(struct task_struct *tsk, int sig);
/usr/src/linux-headers-4.15.0-22/include/linux/signal.h:422:	struct task_struct *t = current; \
/usr/src/linux-headers-4.15.0-22/include/linux/rcuwait.h:10: * after exit_notify(). task_struct is not properly rcu protected,
/usr/src/linux-headers-4.15.0-22/include/linux/rcuwait.h:21:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/include/scsi/libfcoe.h:335:	struct task_struct *kthread;
/usr/src/linux-headers-4.15.0-22/include/scsi/scsi_device.h:227:	struct task_struct	*quiesced_by;
/usr/src/linux-headers-4.15.0-22/include/scsi/scsi_host.h:558:	struct task_struct    * ehandler;  /* Error recovery thread. */
/usr/src/linux-headers-4.15.0-22/include/scsi/libfc.h:459:	struct task_struct  *resp_task;
/usr/src/linux-headers-4.15.0-22/include/pcmcia/ss.h:19:#include <linux/sched.h>	/* task_struct, completion */
/usr/src/linux-headers-4.15.0-22/include/pcmcia/ss.h:187:	struct task_struct		*thread;
/usr/src/linux-headers-4.15.0-22/include/asm-generic/mmu_context.h:12:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/asm-generic/mmu_context.h:16:			struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/asm-generic/mmu_context.h:20:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/mmu_context.h:30:static inline void deactivate_mm(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/mmu_context.h:37:			struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:22:struct task_struct;
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:41:int syscall_get_nr(struct task_struct *task, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:59:void syscall_rollback(struct task_struct *task, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:71:long syscall_get_error(struct task_struct *task, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:84:long syscall_get_return_value(struct task_struct *task, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:101:void syscall_set_return_value(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:121:void syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/syscall.h:141:void syscall_set_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/switch_to.h:22:extern struct task_struct *__switch_to(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/include/asm-generic/switch_to.h:23:				       struct task_struct *);
/usr/src/linux-headers-4.15.0-22/include/trace/perf.h:40:	struct task_struct *__task = NULL;				\
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:17:	TP_PROTO(struct task_struct *t),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:59:	TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:89:	     TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:97:	     TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:104:	     TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:108:static inline long __trace_sched_switch_state(bool preempt, struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:131:		 struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:132:		 struct task_struct *next),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:176:	TP_PROTO(struct task_struct *p, int dest_cpu),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:203:	TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:227:	     TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:235:	     TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:242:	TP_PROTO(struct task_struct *p),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:275:	TP_PROTO(struct task_struct *parent, struct task_struct *child),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:303:	TP_PROTO(struct task_struct *p, pid_t old_pid,
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:330:	TP_PROTO(struct task_struct *tsk, u64 delay),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:357:	     TP_PROTO(struct task_struct *tsk, u64 delay),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:365:	     TP_PROTO(struct task_struct *tsk, u64 delay),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:373:	     TP_PROTO(struct task_struct *tsk, u64 delay),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:380:	     TP_PROTO(struct task_struct *tsk, u64 delay),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:389:	TP_PROTO(struct task_struct *tsk, u64 runtime, u64 vruntime),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:414:	     TP_PROTO(struct task_struct *tsk, u64 runtime, u64 vruntime),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:423:	TP_PROTO(struct task_struct *tsk, struct task_struct *pi_task),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:449:	TP_PROTO(struct task_struct *tsk),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:468:	TP_PROTO(struct task_struct *tsk, int src_cpu, int dst_cpu),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:503:	TP_PROTO(struct task_struct *tsk, int src_cpu, int dst_cpu),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:509:	TP_PROTO(struct task_struct *tsk, int src_cpu, int dst_cpu),
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:516:	TP_PROTO(struct task_struct *src_tsk, int src_cpu,
/usr/src/linux-headers-4.15.0-22/include/trace/events/sched.h:517:		 struct task_struct *dst_tsk, int dst_cpu),
/usr/src/linux-headers-4.15.0-22/include/trace/events/migrate.h:76:	TP_PROTO(struct task_struct *p, int dst_nid, unsigned long nr_pages),
/usr/src/linux-headers-4.15.0-22/include/trace/events/cgroup.h:110:	TP_PROTO(struct cgroup *dst_cgrp, struct task_struct *task, bool threadgroup),
/usr/src/linux-headers-4.15.0-22/include/trace/events/cgroup.h:141:	TP_PROTO(struct cgroup *dst_cgrp, struct task_struct *task, bool threadgroup),
/usr/src/linux-headers-4.15.0-22/include/trace/events/cgroup.h:148:	TP_PROTO(struct cgroup *dst_cgrp, struct task_struct *task, bool threadgroup),
/usr/src/linux-headers-4.15.0-22/include/trace/events/task.h:11:	TP_PROTO(struct task_struct *task, unsigned long clone_flags),
/usr/src/linux-headers-4.15.0-22/include/trace/events/task.h:36:	TP_PROTO(struct task_struct *task, const char *comm),
/usr/src/linux-headers-4.15.0-22/include/trace/events/oom.h:12:	TP_PROTO(struct task_struct *task),
/usr/src/linux-headers-4.15.0-22/include/trace/events/signal.h:41: * @task: pointer to struct task_struct
/usr/src/linux-headers-4.15.0-22/include/trace/events/signal.h:53:	TP_PROTO(int sig, struct siginfo *info, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/include/trace/syscall.h:38:static inline void syscall_tracepoint_update(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/trace/syscall.h:46:static inline void syscall_tracepoint_update(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/net/ip_vs.h:815:	struct task_struct	*master_thread;
/usr/src/linux-headers-4.15.0-22/include/net/ip_vs.h:950:	struct task_struct	**backup_threads;
/usr/src/linux-headers-4.15.0-22/include/net/cls_cgroup.h:28:struct cgroup_cls_state *task_cls_state(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/include/net/cls_cgroup.h:30:static inline u32 task_cls_classid(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/net/netprio_cgroup.h:28:static inline u32 task_netprioidx(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/net/netprio_cgroup.h:50:static inline u32 task_netprioidx(struct task_struct *p)
/usr/src/linux-headers-4.15.0-22/include/media/cec.h:167:	struct task_struct *kthread_config;
/usr/src/linux-headers-4.15.0-22/include/media/cec.h:170:	struct task_struct *kthread;
/usr/src/linux-headers-4.15.0-22/include/media/videobuf-dvb.h:19:	struct task_struct         *thread;
/usr/src/linux-headers-4.15.0-22/include/uapi/linux/userfaultfd.h:167:	 * UFFD_FEATURE_THREAD_ID pid of the page faulted task_struct will
/usr/src/linux-headers-4.15.0-22/include/uapi/linux/bpf.h:525: *     Returns current task_struct
/usr/src/linux-headers-4.15.0-22/include/target/iscsi/iscsi_target_core.h:576:	struct task_struct	*login_kworker;
/usr/src/linux-headers-4.15.0-22/include/target/iscsi/iscsi_target_core.h:609:	struct task_struct	*rx_thread;
/usr/src/linux-headers-4.15.0-22/include/target/iscsi/iscsi_target_core.h:612:	struct task_struct	*tx_thread;
/usr/src/linux-headers-4.15.0-22/include/target/iscsi/iscsi_target_core.h:798:	struct task_struct	*np_thread;
/usr/src/linux-headers-4.15.0-22/include/target/iscsi/iscsi_target_core.h:910:	struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/thread_info.h:41:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/mmu_context.h:29:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/mmu_context.h:39:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/mmu_context.h:55:		struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/mmu_context.h:57:static inline void deactivate_mm(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/processor.h:71:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/processor.h:74:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/processor.h:78:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:23:static inline int syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:28:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:35:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:41:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:47:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:60:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/nios2/include/asm/syscall.h:99:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/smp.h:24:extern int __cpu_up(unsigned int cpu, struct task_struct *tidle);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/thread_info.h:47:void arch_release_task_struct(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/thread_info.h:48:int arch_dup_task_struct(struct task_struct *dst, struct task_struct *src);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/current.h:15:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/current.h:17:#define current ((struct task_struct *const)S390_lowcore.current_task)
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/elf.h:140:#include <linux/sched/mm.h>	/* for task_struct */
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/mmu_context.h:18:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/mmu_context.h:91:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/mmu_context.h:114:	struct task_struct *tsk = current;
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/user.h:23:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/runtime_instr.h:89:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/runtime_instr.h:91:void runtime_instr_release(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/processor.h:210:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/processor.h:217:		struct task_struct *task, unsigned long sp);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/processor.h:223:static inline void release_thread(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/processor.h:226:void guarded_storage_release(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/processor.h:228:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:25:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:32:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:38:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:44:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:50:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:57:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/syscall.h:82:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/switch_to.h:16:extern struct task_struct *__switch_to(void *, void *);
/usr/src/linux-headers-4.15.0-22/arch/s390/include/asm/switch_to.h:17:extern void update_cr_regs(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/smp.h:87:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/ptrace.h:258:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/ptrace.h:259:int valid_user_regs(struct user_pt_regs *regs, struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:63:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:68:extern void fpsimd_thread_switch(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:76:extern void fpsimd_flush_task_state(struct task_struct *target);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:92:extern size_t sve_state_size(struct task_struct const *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:94:extern void sve_alloc(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:95:extern void fpsimd_release_task(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:96:extern void fpsimd_sync_to_sve(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:97:extern void sve_sync_to_fpsimd(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:98:extern void sve_sync_from_fpsimd_zeropad(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:100:extern int sve_set_vector_length(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:117:static inline void sve_alloc(struct task_struct *task) { }
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:118:static inline void fpsimd_release_task(struct task_struct *task) { }
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:119:static inline void sve_sync_to_fpsimd(struct task_struct *task) { }
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/fpsimd.h:120:static inline void sve_sync_from_fpsimd_zeropad(struct task_struct *task) { }
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/stacktrace.h:35:extern int unwind_frame(struct task_struct *tsk, struct stackframe *frame);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/stacktrace.h:36:extern void walk_stackframe(struct task_struct *tsk, struct stackframe *frame,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/stacktrace.h:38:extern void dump_backtrace(struct pt_regs *regs, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/stacktrace.h:53:static inline bool on_task_stack(struct task_struct *tsk, unsigned long sp)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/stacktrace.h:79:static inline bool on_accessible_stack(struct task_struct *tsk, unsigned long sp)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/thread_info.h:28:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/thread_info.h:66:void arch_release_task_struct(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/current.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/current.h:15:static __always_inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/current.h:21:	return (struct task_struct *)sp_el0;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/mmu_context.h:38:static inline void contextidr_thread_switch(struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/mmu_context.h:165:static inline void update_saved_ttbr0(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/mmu_context.h:181:static inline void update_saved_ttbr0(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/mmu_context.h:188:enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/mmu_context.h:215:	  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/hw_breakpoint.h:120:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/hw_breakpoint.h:138:extern void hw_breakpoint_thread_switch(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/hw_breakpoint.h:139:extern void ptrace_hw_copy_thread(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/hw_breakpoint.h:141:static inline void hw_breakpoint_thread_switch(struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/hw_breakpoint.h:144:static inline void ptrace_hw_copy_thread(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/exec.h:24:void uao_thread_switch(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/processor.h:171:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/processor.h:174:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/processor.h:176:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/processor.h:184:extern struct task_struct *cpu_switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/processor.h:185:					 struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/debug-monitors.h:85:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/debug-monitors.h:120:void user_rewind_single_step(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/debug-monitors.h:121:void user_fastforward_single_step(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:25:static inline int syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:31:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:38:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:45:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:51:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:60:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm64/include/asm/syscall.h:86:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/ptrace.h:8:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/ptrace.h:20:extern int read_tsk_long(struct task_struct *, unsigned long, unsigned long *);
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/ptrace.h:21:extern int read_tsk_short(struct task_struct *, unsigned long,
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/thread_info.h:31:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/elf.h:56:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/mmu_context.h:46:				struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/mmu_context.h:69:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/mmu_context.h:76:			struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/mmu_context.h:97:deactivate_mm(struct task_struct *task, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/processor.h:10:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/score/include/asm/processor.h:19:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/thread_info.h:49:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/mmu_context.h:41:	struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/mmu_context.h:48:static inline void deactivate_mm(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/mmu_context.h:58:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/mmu_context.h:69:				struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/processor.h:33:/*  task_struct, defined elsewhere, is the "process descriptor" */
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/processor.h:34:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/processor.h:80:extern void release_thread(struct task_struct *dead_task);
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/processor.h:83:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/syscall.h:32:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/syscall.h:38:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/switch_to.h:26:extern struct task_struct *__switch_to(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/switch_to.h:27:	struct task_struct *,
/usr/src/linux-headers-4.15.0-22/arch/hexagon/include/asm/switch_to.h:28:	struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/ptrace.h:35: *		|  struct task_struct   |  |  |  ^
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/stacktrace.h:20:static __always_inline unsigned long *stack_pointer(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/thread_info.h:46:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/current.h:18:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/current.h:20:static inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/elf.h:196:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/elf.h:199:			  struct task_struct*);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/elf.h:201:			     struct task_struct*);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/elf.h:203:			    struct task_struct*);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/elf.h:205:			      struct task_struct*);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/mmu_context.h:113:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/mmu_context.h:125:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/mmu_context.h:151:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/pgtable.h:40: *	the task structure (struct task_struct*) t, e.g. current():
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/hw_breakpoint.h:35:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/hw_breakpoint.h:47:void clear_ptrace_hw_breakpoint(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/hw_breakpoint.h:51:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/hw_breakpoint.h:53:static inline void clear_ptrace_hw_breakpoint(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/processor.h:205:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/processor.h:211:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/nommu_context.h:6:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/nommu_context.h:10:static inline int init_new_context(struct task_struct *tsk,struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/nommu_context.h:24:				struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/xtensa/include/asm/nommu_context.h:28:static inline void deactivate_mm(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_64.h:17:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_64.h:27:int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_64.h:79:static inline void switch_mm(struct mm_struct *old_mm, struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_32.h:32:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_32.h:102:unsigned long get_wchan(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_32.h:110:extern struct task_struct *last_task_used_math;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_32.h:111:int do_mathemu(struct pt_regs *regs, struct task_struct *fpt);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/leon.h:220:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/leon.h:240:int leon_boot_one_cpu(int i, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/current.h:18:register struct task_struct *current asm("g4");
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/current.h:27:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/current.h:28:static inline struct task_struct *__get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/uprobes.h:49:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/uprobes.h:55:extern bool arch_uprobe_xol_was_trapped(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/thread_info_32.h:30:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/sfp-machine_32.h:179:extern struct task_struct *last_task_used_math;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_64.h:93:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/processor_64.h:192:unsigned long get_wchan(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_32.h:9:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_32.h:16:int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/mmu_context_32.h:27:	       struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:20:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:28:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:68:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:76:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:84:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:97:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/syscall.h:120:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/thread_info_64.h:34:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sparc/include/asm/thread_info_64.h:38:	struct task_struct	*task;
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/ptrace.h:22:extern int is_user_addr_valid(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/thread_info.h:39:	struct task_struct *task;	/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/mmu_context.h:76:			       struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/mmu_context.h:114:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/mmu_context.h:163:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/mmu_context.h:169:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/mmu_context.h:175:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/processor.h:71:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/processor.h:74:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/processor.h:78:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:26:syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:32:syscall_rollback(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:38:syscall_get_error(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:44:syscall_get_return_value(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:50:syscall_set_return_value(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:67:syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/syscall.h:85:syscall_set_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/switch_to.h:21:asmlinkage struct task_struct *resume(struct task_struct *prev, struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/asm/cpu.h:18:	struct task_struct *idle;
/usr/src/linux-headers-4.15.0-22/arch/blackfin/include/uapi/asm/ptrace.h:28:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/blackfin/mach-bf561/include/mach/smp.h:12:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/blackfin/mach-bf561/include/mach/smp.h:18:int platform_boot_secondary(unsigned int cpu, struct task_struct *idle);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/thread_info.h:18:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/machvec.h:17:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/machvec.h:74:			     struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/elf.h:111:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/elf.h:119:extern int dump_elf_task(elf_greg_t *dest, struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/elf.h:125:extern int dump_elf_task_fp(elf_fpreg_t *dest, struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/mmu_context.h:137:	      struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/mmu_context.h:167:	      struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/mmu_context.h:233:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/mmu_context.h:252:enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/user.h:19: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/processor.h:44:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/processor.h:45:extern unsigned long thread_saved_pc(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/processor.h:52:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/processor.h:54:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/switch_to.h:6:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/alpha/include/asm/switch_to.h:7:extern struct task_struct *alpha_switch_to(unsigned long, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/smp.h:103:	int  (*smp_boot_secondary)(unsigned int cpu, struct task_struct *idle);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/thread_info.h:25:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/thread_info.h:53:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/elf.h:15:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/elf.h:114:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/elf.h:115:int dump_task_regs(struct task_struct *t, elf_gregset_t *elfregs);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:31:void check_and_switch_context(struct mm_struct *mm, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:33:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:54:					    struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:99:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:120:enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/mmu_context.h:132:	  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/user.h:17:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/hw_breakpoint.h:7:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/hw_breakpoint.h:127:extern void clear_ptrace_hw_breakpoint(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/hw_breakpoint.h:135:static inline void clear_ptrace_hw_breakpoint(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/processor.h:80:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/processor.h:83:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/processor.h:85:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/unwind.h:51:extern void unwind_backtrace(struct pt_regs *regs, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/traps.h:8:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/traps.h:45:extern void ptrace_break(struct task_struct *tsk, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:22:static inline int syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:28:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:34:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:41:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:47:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:56:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/syscall.h:83:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/arm/include/asm/switch_to.h:24:extern struct task_struct *__switch_to(struct task_struct *, struct thread_info *, struct thread_info *);
/usr/src/linux-headers-4.15.0-22/arch/arm/plat-versatile/include/plat/platsmp.h:14:extern int  versatile_boot_secondary(unsigned int cpu, struct task_struct *idle);
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:29:extern struct task_struct *fpu_state_owner;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:36:static inline void set_using_fpu(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:45:static inline void clear_using_fpu(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:56:extern asmlinkage void fpu_kill_state(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:63:static inline void unlazy_fpu(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:79:static inline void exit_fpu(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:91:	struct task_struct *tsk = current;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:115:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:117:static inline bool is_using_fpu(struct task_struct *tsk) { return false; }
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:118:static inline void set_using_fpu(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:119:static inline void clear_using_fpu(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:122:static inline void fpu_kill_state(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:123:static inline void unlazy_fpu(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/fpu.h:124:static inline void exit_fpu(struct task_struct *tsk) {}
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/thread_info.h:42:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/current.h:21:register struct task_struct *const current asm("e2") __attribute__((used));
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/current.h:25:extern struct task_struct *__current;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/current.h:29:struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/mmu_context.h:105:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/mmu_context.h:146:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/processor.h:24:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/processor.h:133:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/processor.h:135:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:22:static inline int syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:27:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:33:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:40:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:46:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:53:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/syscall.h:85:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/switch_to.h:16:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/switch_to.h:36:struct task_struct *__switch_to(struct thread_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/mn10300/include/asm/switch_to.h:38:				struct task_struct *prev_task);
/usr/src/linux-headers-4.15.0-22/arch/mn10300/Kconfig:218:	  current process's task_struct whilst in the kernel.
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/thread_info.h:30:/* THREAD_SIZE is the size of the task_struct/kernel_stack combo.
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/thread_info.h:50:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/mmu_context.h:24:extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/mmu_context.h:27:		      struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/mmu_context.h:39:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/processor.h:53:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/processor.h:84:void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/processor.h:85:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:27:syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:33:syscall_rollback(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:39:syscall_get_error(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:45:syscall_get_return_value(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:51:syscall_set_return_value(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:58:syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/openrisc/include/asm/syscall.h:67:syscall_set_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_64.h:14:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_64.h:19:struct task_struct *sh64_switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_64.h:21:				   struct task_struct *next,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_32.h:133:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_32.h:138:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_32.h:179:void show_trace(struct task_struct *tsk, unsigned long *sp,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_32.h:190:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:22:extern void save_fpu(struct task_struct *__tsk);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:23:extern void restore_fpu(struct task_struct *__tsk);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:38:extern int init_fpu(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:40:extern int fpregs_get(struct task_struct *target,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:45:static inline void __unlazy_fpu(struct task_struct *tsk, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:55:static inline void unlazy_fpu(struct task_struct *tsk, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/fpu.h:62:static inline void clear_fpu(struct task_struct *tsk, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/unwinder.h:11:	void (*dump)(struct task_struct *, struct pt_regs *,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/unwinder.h:18:extern void unwind_stack(struct task_struct *, struct pt_regs *,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/unwinder.h:22:extern void stack_reader_dump(struct task_struct *, struct pt_regs *,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/stacktrace.h:19:void dump_trace(struct task_struct *tsk, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:12:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:18:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:27:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:33:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:39:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:49:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_32.h:77:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/thread_info.h:30:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/thread_info.h:97:extern int arch_dup_task_struct(struct task_struct *dst, struct task_struct *src);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/thread_info.h:98:extern void arch_release_task_struct(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/alignment.h:20:extern void unaligned_fixups_notify(struct task_struct *, insn_size_t, struct pt_regs *);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/mmu_context.h:100:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/mmu_context.h:123:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:11:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:17:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:26:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:32:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:38:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:48:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/syscall_64.h:57:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/user.h:15: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_32.h:64:struct task_struct *__switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_32.h:65:				struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/switch_to_32.h:78:	struct task_struct *__last;				\
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/hw_breakpoint.h:45:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor.h:107:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor.h:116:extern void free_thread_xstate(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor.h:120:extern int get_unalign_ctl(struct task_struct *, unsigned long addr);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor.h:121:extern int set_unalign_ctl(struct task_struct *, unsigned int val);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_64.h:167:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_64.h:171:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_64.h:217:extern struct task_struct *last_task_used_math;
/usr/src/linux-headers-4.15.0-22/arch/sh/include/asm/processor_64.h:224:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/compat.h:282:static inline int __is_compat_task(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/thread_info.h:12:	struct task_struct *task;	/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/elf.h:305:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/elf.h:307:extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/mmu_context.h:12:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/mmu_context.h:23:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/mmu_context.h:54:		struct mm_struct *next, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/mmu_context.h:63:		struct mm_struct *next, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/processor.h:169:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/processor.h:170:void show_trace(struct task_struct *task, unsigned long *stack);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/processor.h:294:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/processor.h:298:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/processor.h:300:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/unwind.h:56:	struct task_struct *t;
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/unwind.h:71:void unwind_frame_init(struct unwind_frame_info *info, struct task_struct *t, 
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/unwind.h:73:void unwind_frame_init_from_blocked_task(struct unwind_frame_info *info, struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/syscall.h:14:static inline long syscall_get_nr(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/syscall.h:20:static inline void syscall_get_arguments(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/syscall.h:46:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/syscall.h:52:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/syscall.h:59:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/switch_to.h:5:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/parisc/include/asm/switch_to.h:7:extern struct task_struct *_switch_to(struct task_struct *, struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:128:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:130:extern int ptrace_getregs(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:132:extern int ptrace_setregs(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:135:extern int ptrace_getfpregs(struct task_struct *child, __u32 __user *data);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:136:extern int ptrace_setfpregs(struct task_struct *child, __u32 __user *data);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:138:extern int ptrace_get_watch_regs(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/ptrace.h:140:extern int ptrace_set_watch_regs(struct task_struct *child,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:37:extern void _save_fp(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:38:extern void _restore_fp(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:170:static inline void lose_fpu_inatomic(int save, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:239:static inline void save_fp(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:245:static inline void restore_fp(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu.h:251:static inline union fpureg *get_fpu_regs(struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/watch.h:15:void mips_install_watch_registers(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu_emulator.h:183:		     struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/fpu_emulator.h:195:	struct task_struct *t = current;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/stacktrace.h:11:extern unsigned long unwind_stack(struct task_struct *task, unsigned long *sp,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/stacktrace.h:19:static inline unsigned long unwind_stack(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/thread_info.h:26:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/dsemul.h:25:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/dsemul.h:66:extern bool dsemul_thread_cleanup(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/smp-ops.h:22:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/smp-ops.h:29:	int (*boot_secondary)(int cpu, struct task_struct *idle);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/mmu_context.h:95:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/mmu_context.h:122:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/mmu_context.h:139:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/msa.h:19:extern void _save_msa(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/msa.h:20:extern void _restore_msa(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/msa.h:138:static inline void save_msa(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/msa.h:144:static inline void restore_msa(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/processor.h:366:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/processor.h:380:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/processor.h:419:extern int mips_get_process_fp_mode(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/processor.h:420:extern int mips_set_process_fp_mode(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/cmp.h:8:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/cmp.h:12:extern void cmp_boot_secondary(int cpu, struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:29:static inline bool mips_syscall_is_indirect(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:38:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:44:static inline void mips_syscall_update_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:58:	struct task_struct *task, struct pt_regs *regs, unsigned int n)
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:92:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:98:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:104:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/syscall.h:117:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/switch_to.h:21:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/switch_to.h:32:extern asmlinkage struct task_struct *resume(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/switch_to.h:33:		struct task_struct *next, struct thread_info *next_ti);
/usr/src/linux-headers-4.15.0-22/arch/mips/include/asm/switch_to.h:36:extern struct task_struct *ll_task;
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/mmu_context_mm.h:39:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/mmu_context_mm.h:121:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/thread_info.h:67:	struct task_struct	*task; /* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/current.h:24:register struct task_struct *current asm("r31");
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/processor.h:61:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/processor.h:68:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/processor.h:72:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/processor.h:118:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/processor.h:122:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/unwind.h:26:void microblaze_unwind(struct task_struct *task, struct stack_trace *trace);
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:11:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:17:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:23:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:29:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:35:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:83:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/syscall.h:92:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/switch_to.h:12:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/microblaze/include/asm/switch_to.h:15:extern struct task_struct *_switch_to(struct thread_info *prev,
/usr/src/linux-headers-4.15.0-22/arch/cris/include/arch-v32/arch/offset.h:31:#define TASK_pid 151 /* offsetof(struct task_struct, pid) */
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/thread_info.h:31:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/mmu_context.h:7:extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/mmu_context.h:11:		      struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/mmu_context.h:31:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/user.h:17: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/processor.h:19:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/processor.h:52:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/processor.h:57:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/switch_to.h:9:extern struct task_struct *resume(struct task_struct *prev, struct task_struct *next, int);
/usr/src/linux-headers-4.15.0-22/arch/cris/include/asm/switch_to.h:11:					 (int)&((struct task_struct *)0)->thread)
/usr/src/linux-headers-4.15.0-22/arch/cris/include/arch-v10/arch/offset.h:29:#define TASK_pid 141 /* offsetof(struct task_struct, pid) */
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/hardwall.h:26:int proc_pid_hardwall(struct seq_file *m, struct pid_namespace *ns, struct pid *pid, struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/ptrace.h:81:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/ptrace.h:83:extern void send_sigtrap(struct task_struct *tsk, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/stack.h:29:	struct task_struct *task;     /* task we are backtracing */
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/stack.h:41: * Initialize a KBacktraceIterator from a task_struct, and optionally from
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/stack.h:48:				    struct task_struct *, struct pt_regs *);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/thread_info.h:28:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/current.h:20:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/current.h:22:static inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/current.h:28:/* Return a usable "task_struct" pointer even if the real one is corrupt. */
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/current.h:29:struct task_struct *validate_current(void);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/elf.h:121:extern int dump_task_regs(struct task_struct *, elf_gregset_t *);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/mmu_context.h:30:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/mmu_context.h:81:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/mmu_context.h:94:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/processor.h:32:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/processor.h:210:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/processor.h:217:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/processor.h:239:extern int get_unalign_ctl(struct task_struct *tsk, unsigned long adr);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/processor.h:240:extern int set_unalign_ctl(struct task_struct *tsk, unsigned int val);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/setup.h:45:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/setup.h:46:void hardwall_switch_tasks(struct task_struct *prev, struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/setup.h:47:void hardwall_deactivate_all(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/homecache.h:24:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:38:static inline int syscall_get_nr(struct task_struct *t, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:43:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:49:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:56:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:62:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:77:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/syscall.h:86:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:31:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:37:void _prepare_arch_switch(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:39:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:41:extern struct task_struct *_switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:42:				      struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:45:extern struct task_struct *__switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:46:				       struct task_struct *next,
/usr/src/linux-headers-4.15.0-22/arch/tile/include/asm/switch_to.h:73:struct task_struct *sim_notify_fork(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/pnv-pci.h:36:extern int pnv_pci_get_as_notify_info(struct task_struct *task, u32 *lpid,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/ptrace.h:115:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/ptrace.h:116:extern int ptrace_get_reg(struct task_struct *task, int regno,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/ptrace.h:118:extern int ptrace_put_reg(struct task_struct *task, int regno,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/thread_info.h:35:	struct task_struct *task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/current.h:12:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/current.h:18:static inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/current.h:20:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/current.h:35:register struct task_struct *current asm ("r2");
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/elf.h:12:#include <linux/sched.h>	/* for task_struct */
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/kvm_host.h:756:	struct task_struct *run_task;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:17:extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:44:extern void switch_slb(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:52:				      struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:65:			       struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:136:			       struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:139:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/mmu_context.h:163:				  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/cputime.h:50:static inline void arch_vtime_task_switch(struct task_struct *tsk) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/cputime.h:52:void arch_vtime_task_switch(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/user.h:18: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/hw_breakpoint.h:70:extern void flush_ptrace_hw_breakpoint(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/hw_breakpoint.h:84:extern void thread_change_pc(struct task_struct *tsk, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/hw_breakpoint.h:88:static inline void thread_change_pc(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:87:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:89:void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:386:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:395:extern int get_fpexc_mode(struct task_struct *tsk, unsigned long adr);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:396:extern int set_fpexc_mode(struct task_struct *tsk, unsigned int val);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:401:extern int get_endian(struct task_struct *tsk, unsigned long adr);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:402:extern int set_endian(struct task_struct *tsk, unsigned int val);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:407:extern int get_unalign_ctl(struct task_struct *tsk, unsigned long adr);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:408:extern int set_unalign_ctl(struct task_struct *tsk, unsigned int val);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:451:/* Check that a certain kernel stack pointer is valid in task_struct p */
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/processor.h:452:int validate_sp(unsigned long sp, struct task_struct *p,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/paca.h:56:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/paca.h:160:	struct task_struct *__current;	/* Pointer to current */
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:25:static inline int syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:36:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:42:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:48:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:67:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/syscall.h:90:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:11:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:14:extern struct task_struct *__switch_to(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:15:	struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:18:extern struct task_struct *_switch(struct thread_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:25:extern void flush_all_to_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:26:extern void giveup_all(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:30:extern void flush_fp_to_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:31:extern void giveup_fpu(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:32:extern void save_fpu(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:38:static inline void __giveup_fpu(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:39:static inline void save_fpu(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:40:static inline void flush_fp_to_thread(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:45:extern void flush_altivec_to_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:46:extern void giveup_altivec(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:47:extern void save_altivec(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:53:static inline void save_altivec(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:54:static inline void __giveup_altivec(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:59:extern void flush_vsx_to_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:68:extern void flush_spe_to_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:69:extern void giveup_spe(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:70:extern void __giveup_spe(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:76:static inline void __giveup_spe(struct task_struct *t) { }
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:79:static inline void clear_task_ebb(struct task_struct *t)
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:97:extern int set_thread_tidr(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/powerpc/include/asm/switch_to.h:98:extern void clear_thread_tidr(struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/ptrace.h:20:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/ptrace.h:21:extern void init_debug_traps(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/thread_info.h:27:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/mmu_context.h:77:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/mmu_context.h:125:	struct mm_struct *next, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/user.h:17: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/processor.h:115:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/processor.h:119:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/processor.h:121:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/m32r/include/asm/switch_to.h:16: * `next' and `prev' should be struct task_struct, but it isn't always defined
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/thread_info.h:26:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/thread_info.h:72:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/elf.h:65:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/elf.h:66:int dump_task_regs(struct task_struct *t, elf_gregset_t *elfregs);
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/mmu_context.h:38:enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/mmu_context.h:50:	  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/processor.h:66:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/processor.h:69:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/processor.h:71:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/switch_to.h:13:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/unicore32/include/asm/switch_to.h:21:extern struct task_struct *__switch_to(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/ptrace.h:20:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/thread_info.h:33:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/current.h:20:register struct task_struct *current asm("gr29");
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/mmu_context.h:20:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/mmu_context.h:25:extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/user.h:29: *   in the file.  Directly after this is a copy of the task_struct,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:35:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:44:	struct task_struct	*curr;		/* [GR29] current pointer for this thread */
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:59:extern struct task_struct *__kernel_current_task;
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:70:	(struct task_struct *) init_stack,	\
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:88:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/processor.h:95:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:21:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:31:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:41:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:50:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:59:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:72:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/syscall.h:102:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/switch_to.h:23:struct task_struct *__switch_to(struct thread_struct *prev_thread,
/usr/src/linux-headers-4.15.0-22/arch/frv/include/asm/switch_to.h:25:				struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:21:static inline int syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:27:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:33:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:41:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:47:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:54:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/syscall-generic.h:95:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/stacktrace.h:19:get_frame_pointer(struct task_struct *task, struct pt_regs *segv_regs)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/stacktrace.h:27:get_frame_pointer(struct task_struct *task, struct pt_regs *segv_regs)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/stacktrace.h:34:*get_stack_pointer(struct task_struct *task, struct pt_regs *segv_regs)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/stacktrace.h:41:void dump_trace(struct task_struct *tsk, const struct stacktrace_ops *ops, void *data);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/thread_info.h:17:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/mmu_context.h:62:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/mmu_context.h:75:				  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/mmu_context.h:79:extern int init_new_context(struct task_struct *task, struct mm_struct *mm);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:32:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:34:extern long subarch_ptrace(struct task_struct *child, long request,
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:36:extern unsigned long getreg(struct task_struct *child, int regno);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:37:extern int putreg(struct task_struct *child, int regno, unsigned long value);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:39:extern int arch_copy_tls(struct task_struct *new);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/ptrace-generic.h:40:extern void clear_flushed_tls(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/sysrq.h:5:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/sysrq.h:6:extern void show_trace(struct task_struct* task, unsigned long *stack);
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/processor-generic.h:11:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/processor-generic.h:27:	struct task_struct *prev_sched;
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/processor-generic.h:57:static inline void release_thread(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/um/include/asm/processor-generic.h:98:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:88:  /* given a pointer to a task_struct, return the user's pt_regs */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:95:	  struct task_struct *_task = (task);			\
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:114:  struct task_struct;			/* forward decl */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:118:  extern unsigned long ia64_get_user_rbs_end (struct task_struct *, struct pt_regs *,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:120:  extern long ia64_peek (struct task_struct *, struct switch_stack *, unsigned long,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:122:  extern long ia64_poke (struct task_struct *, struct switch_stack *, unsigned long,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:124:  extern void ia64_flush_fph (struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:125:  extern void ia64_sync_fph (struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:127:  extern long ia64_sync_user_rbs (struct task_struct *, struct switch_stack *,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/ptrace.h:144:  extern void ptrace_attach_sync_user_rbs (struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/mca.h:93:	struct task_struct	*prev_task;		/* previous task, NULL if it is not useful */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:18:extern void pfm_save_regs (struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:19:extern void pfm_load_regs (struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:21:extern void pfm_exit_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:22:extern int  pfm_use_debug_registers(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:23:extern int  pfm_release_debug_registers(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:24:extern void pfm_syst_wide_update_task(struct task_struct *, unsigned long info, int is_ctxswin);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:25:extern void pfm_inherit(struct task_struct *task, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:70:	int		(*fmt_validate)(struct task_struct *task, unsigned int flags, int cpu, void *arg);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:71:	int		(*fmt_getsize)(struct task_struct *task, unsigned int flags, int cpu, void *arg, unsigned long *size);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:72:	int 		(*fmt_init)(struct task_struct *task, void *buf, unsigned int flags, int cpu, void *arg);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:73:	int		(*fmt_handler)(struct task_struct *task, void *buf, pfm_ovfl_arg_t *arg, struct pt_regs *regs, unsigned long stamp);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:74:	int		(*fmt_restart)(struct task_struct *task, pfm_ovfl_ctrl_t *ctrl, void *buf, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:75:	int		(*fmt_restart_active)(struct task_struct *task, pfm_ovfl_ctrl_t *ctrl, void *buf, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:76:	int		(*fmt_exit)(struct task_struct *task, void *buf, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:87:extern int pfm_mod_read_pmds(struct task_struct *, void *req, unsigned int nreq, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:88:extern int pfm_mod_write_pmcs(struct task_struct *, void *req, unsigned int nreq, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:89:extern int pfm_mod_write_ibrs(struct task_struct *task, void *req, unsigned int nreq, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/perfmon.h:90:extern int pfm_mod_write_dbrs(struct task_struct *task, void *req, unsigned int nreq, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/thread_info.h:23:	struct task_struct *task;	/* XXX not really needed, except for dup_task_struct() */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/thread_info.h:87:	struct task_struct *ret = page ? page_address(page) : NULL;		\
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/current.h:16:#define current	((struct task_struct *) ia64_getreg(_IA64_REG_TP))
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/machvec.h:23:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/machvec.h:41:typedef void ia64_mv_migrate_t(struct task_struct * task);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/machvec.h:89:machvec_noop_task (struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/elf.h:208:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/mmu_context.h:53:enter_lazy_tlb (struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/mmu_context.h:120:init_new_context (struct task_struct *p, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/cputime.h:22:extern void arch_vtime_task_switch(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/user.h:13: *	copy of the task_struct, which is currently not used by gdb,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:203:	struct task_struct *ksoftirqd;	/* kernel softirq daemon for this CPU */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:333:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:343:extern unsigned long get_wchan (struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:393: * task_struct at this point.
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:402:	struct task_struct *__ia64_islfo_task = (t);						\
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:404:	 && __ia64_islfo_task == (struct task_struct *) ia64_get_kr(IA64_KR_FPU_OWNER));	\
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/processor.h:412:	struct task_struct *__ia64_slfo_task = (t);					\
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/unwind.h:17:struct task_struct;	/* forward declaration */
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/unwind.h:68:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/unwind.h:116:extern void unw_init_from_blocked_task (struct unw_frame_info *info, struct task_struct *t);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/unwind.h:118:extern void unw_init_frame_info (struct unw_frame_info *info, struct task_struct *t,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:20:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:29:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:35:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:41:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:47:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:61:extern void ia64_syscall_get_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:64:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/syscall.h:74:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/switch_to.h:17:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/switch_to.h:29:extern struct task_struct *ia64_switch_to (void *next_task);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/switch_to.h:31:extern void ia64_save_extra (struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/asm/switch_to.h:32:extern void ia64_load_extra (struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/ia64/include/uapi/asm/ptrace.h:50: *            |  struct task_struct  |	 |  |
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/stacktrace.h:33:	struct task_struct *tsk, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/thread_info.h:45:	struct task_struct *task;	/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/current.h:19:register struct task_struct *curr_arc asm("r25");
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/bug.h:16:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/bug.h:19:void show_stacktrace(struct task_struct *tsk, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/mmu_context.h:109:init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/mmu_context.h:133:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/processor.h:58:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/processor.h:99:extern unsigned int get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/unwind.h:54:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:18:syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:27:syscall_rollback(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:33:syscall_get_error(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:40:syscall_get_return_value(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:46:syscall_set_return_value(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/syscall.h:57:syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/switch_to.h:18:extern void fpu_save_restore(struct task_struct *p, struct task_struct *n);
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/switch_to.h:30:extern void dp_save_restore(struct task_struct *p, struct task_struct *n);
/usr/src/linux-headers-4.15.0-22/arch/arc/include/asm/switch_to.h:37:struct task_struct *__switch_to(struct task_struct *p, struct task_struct *n);
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/thread_info.h:31:	struct task_struct *task;	/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/mmu_context.h:16:				  struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/mmu_context.h:20:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/mmu_context.h:101:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/processor.h:128:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/processor.h:131:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/processor.h:145:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/processor.h:196:extern void show_trace(struct task_struct *tsk, unsigned long *sp,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:22:static inline long syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:41:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:47:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:54:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:60:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:67:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/metag/include/asm/syscall.h:83:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/smp.h:41: * of task_struct here, but we need access to the CPU this task is running on.
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/thread_info.h:38: * - thread_info is included in task_struct at an offset of 0.  This means that
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/thread_info.h:39: *   tp points to both thread_info and task_struct.
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/current.h:26:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/current.h:30: * task_struct".  This constraint seems to be necessary on other architectures
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/current.h:33: * task_struct" here due to some header ordering problems.
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/current.h:35:static __always_inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/current.h:37:	register struct task_struct *tp __asm__("tp");
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/bug.h:80:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/bug.h:84:	unsigned long addr, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/mmu_context.h:27:	struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/mmu_context.h:32:static inline int init_new_context(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/mmu_context.h:83:	struct mm_struct *next, struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/mmu_context.h:109:static inline void deactivate_mm(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/processor.h:33:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/processor.h:68:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/processor.h:72:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:32:static inline int syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:38:static inline void syscall_set_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:45:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:51:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:59:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:65:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:72:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/syscall.h:87:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:21:extern void __fstate_save(struct task_struct *save_to);
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:22:extern void __fstate_restore(struct task_struct *restore_from);
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:29:static inline void fstate_save(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:38:static inline void fstate_restore(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:47:static inline void __switch_to_aux(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:48:				   struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:58:extern struct task_struct *__switch_to(struct task_struct *,
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:59:				       struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:63:	struct task_struct *__prev = (prev);		\
/usr/src/linux-headers-4.15.0-22/arch/riscv/include/asm/switch_to.h:64:	struct task_struct *__next = (next);		\
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/thread_info.h:42:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/processor.h:85:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/processor.h:91:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/processor.h:110:extern unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:17:static inline int syscall_get_nr(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:23:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:29:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:35:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:41:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:48:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/syscall.h:85:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/switch_to.h:18:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/c6x/include/asm/switch_to.h:22:			     struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/thread_info.h:28:	struct task_struct	*task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/current.h:7:register struct task_struct *current __asm__("%a2");
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/current.h:18:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/current.h:20:static inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:8:static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:76:	struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:97:static inline void load_ksp_mmu(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:169:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:198:			     struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:217:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:283:static inline void switch_mm(struct mm_struct *prev, struct mm_struct *next, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:310:static inline int init_new_context(struct task_struct *tsk, struct mm_struct *mm)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/mmu_context.h:316:static inline void switch_mm(struct mm_struct *prev, struct mm_struct *next, struct task_struct *tsk)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/user.h:15:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/processor.h:127:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/processor.h:130:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/m68k/include/asm/processor.h:134:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/ptrace.h:32:extern long h8300_get_reg(struct task_struct *task, int regno);
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/ptrace.h:33:extern int h8300_put_reg(struct task_struct *task, int regno,
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/thread_info.h:30:	struct task_struct *task;		/* main task structure */
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/user.h:17:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/processor.h:107:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/processor.h:110:static inline void release_thread(struct task_struct *dead_task)
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/processor.h:114:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/syscall.h:13:syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/h8300/include/asm/syscall.h:19:syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt_types.h:54:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt_types.h:176:	void (*start_context_switch)(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt_types.h:177:	void (*end_context_switch)(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt_types.h:670:void paravirt_start_context_switch(struct task_struct *prev);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt_types.h:671:void paravirt_end_context_switch(struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:43:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:54:	int (*cpu_up)(unsigned cpu, struct task_struct *tidle);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:94:static inline int __cpu_up(unsigned int cpu, struct task_struct *tidle)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:134:void common_cpu_up(unsigned int cpunum, struct task_struct *tidle);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:135:int native_cpu_up(unsigned int cpunum, struct task_struct *tidle);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/smp.h:147:void x86_idle_thread_init(unsigned int cpu, struct task_struct *idle);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/ptrace.h:96:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/ptrace.h:102:convert_ip_to_linear(struct task_struct *child, struct pt_regs *regs);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/ptrace.h:103:extern void send_sigtrap(struct task_struct *tsk, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/ptrace.h:280:extern int do_get_thread_area(struct task_struct *p, int idx,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/ptrace.h:282:extern int do_set_thread_area(struct task_struct *p, int idx,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/pkeys.h:7:extern int arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/pkeys.h:34:extern int __arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/pkeys.h:103:extern int arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/pkeys.h:105:extern int __arch_set_user_pkey_access(struct task_struct *tsk, int pkey,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:29:bool in_task_stack(unsigned long *stack, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:34:int get_stack_info(unsigned long *stack, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:57:get_frame_pointer(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:69:get_frame_pointer(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:76:get_stack_pointer(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/stacktrace.h:87:void show_trace_log_lvl(struct task_struct *task, struct pt_regs *regs,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/user_64.h:18:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/thread_info.h:52:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/thread_info.h:240:extern int arch_dup_task_struct(struct task_struct *dst, struct task_struct *src);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/thread_info.h:241:extern void arch_release_task_struct(struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/current.h:9:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/current.h:11:DECLARE_PER_CPU(struct task_struct *, current_task);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/current.h:13:static __always_inline struct task_struct *get_current(void)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/vm86.h:52:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/vm86.h:74:void release_vm86_irqs(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/elf.h:289:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/proto.h:13:long do_arch_prctl_64(struct task_struct *task, int option, unsigned long arg2);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/proto.h:38:long do_arch_prctl_common(struct task_struct *task, int option,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/mmu_context.h:183:void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/mmu_context.h:185:static inline int init_new_context(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/mmu_context.h:210:		      struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/mmu_context.h:213:			       struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt.h:632:static inline void arch_start_context_switch(struct task_struct *prev)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/paravirt.h:637:static inline void arch_end_context_switch(struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:8:struct task_struct;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:60: * but in the task_struct case we must also meet hardware imposed
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:579:extern void release_thread(struct task_struct *);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:581:unsigned long get_wchan(struct task_struct *p);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:769:extern void set_task_blockstep(struct task_struct *task, bool on);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/processor.h:894:extern unsigned long KSTK_ESP(struct task_struct *task);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/user_32.h:16:   in the file.  Directly after this is a copy of the task_struct, which
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/unwind.h:16:	struct task_struct *task;
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/unwind.h:32:void __unwind_start(struct unwind_state *state, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/unwind.h:49:void unwind_start(struct unwind_state *state, struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/unwind.h:111:static inline bool task_on_another_cpu(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/fpu/signal.h:30:			      struct task_struct *tsk);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/fpu/signal.h:31:extern void convert_to_fxsr(struct task_struct *tsk,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:43:static inline int syscall_get_nr(struct task_struct *task, struct pt_regs *regs)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:48:static inline void syscall_rollback(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:54:static inline long syscall_get_error(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:73:static inline long syscall_get_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:79:static inline void syscall_set_return_value(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:88:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:97:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:113:static inline void syscall_get_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/syscall.h:174:static inline void syscall_set_arguments(struct task_struct *task,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:7:struct task_struct; /* one of the stranger aspects of C forward declarations */
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:9:struct task_struct *__switch_to_asm(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:10:				    struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:12:__visible struct task_struct *__switch_to(struct task_struct *prev,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:13:					  struct task_struct *next);
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:15:void __switch_to_xtra(struct task_struct *prev_p, struct task_struct *next_p,
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:19:static inline void prepare_switch_to(struct task_struct *next)
/usr/src/linux-headers-4.15.0-22/arch/x86/include/asm/switch_to.h:90:static inline void update_sp0(struct task_struct *task)
/usr/src/linux-headers-4.15.0-22/arch/Kconfig:249:# Select if arch wants to size task_struct dynamically via arch_task_struct_size:
/usr/src/linux-headers-4.15.0-22/init/Kconfig:32:	  Select this to move thread_info off the stack into task_struct.  To
